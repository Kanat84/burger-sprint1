{"version":3,"sources":["components/burger-constructor/burger-constructor.module.css","pages/not-found/not-found.module.css","components/profile-orders/profile-orders.module.css","components/modal-overlay/modal-overlay.module.css","pages/feed/feed.module.css","services/types/index.ts","components/app-header/app-header.tsx","services/constants/index.ts","services/actions/burger-constructor.tsx","components/burger-constructor-item/burger-constructor-item.tsx","utils/constants.ts","utils/funcs.tsx","services/actions/users.tsx","services/actions/orders.tsx","services/actions/burger-ingredients.tsx","services/funcs.tsx","components/burger-constructor/burger-constructor.tsx","components/burger-ingredients-detail/burger-ingredients-detail.tsx","components/burger-ingredients/burger-ingredients.tsx","pages/home/home.tsx","pages/not-found/not-found.tsx","pages/auth/login/login.tsx","pages/auth/register/register.tsx","pages/auth/forgot-password/forgot-password.tsx","pages/auth/reset-password/reset-password.tsx","components/profile-options/profile-options.tsx","components/feed-item/feed-item.tsx","services/actions/ws.tsx","components/profile-orders/profile-orders.tsx","pages/profile/profile.tsx","pages/feed/feed.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/ingredient-details/ingredient-details.tsx","images/image.svg","components/order-details/order-details.tsx","components/feed-details/feed-details.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/burger-constructor.tsx","services/reducers/burger-ingredients.tsx","services/reducers/users.tsx","services/reducers/orders.tsx","services/reducers/ws.tsx","services/reducers/index.tsx","services/middleware/wsMiddleWare.tsx","services/store.tsx","index.tsx","pages/profile/profile.module.css","pages/auth/register/register.module.css","components/feed-details/feed-details.module.css","components/burger-ingredients/burger-ingredients.module.css","pages/auth/login/login.module.css","pages/auth/reset-password/reset-password.module.css","components/ingredient-details/ingredient-details.module.css","pages/auth/forgot-password/forgot-password.module.css","components/burger-ingredients-detail/burger-ingredients-detail.module.css","components/modal/modal.module.css","components/order-details/order-details.module.css","components/profile-options/profile-options.module.css","components/app/app.module.css","components/app-header/app-header.module.css"],"names":["module","exports","useDispatch","dispatchHook","useSelector","selectorHook","AppHeader","isAuth","state","usersData","isConstructor","useRouteMatch","path","exact","isProfile","isLogin","isIngredient","isFeed","className","styles","header","container","nav","nav__menu","nav__item","to","nav__link","nav__linkActive","type","activeClassName","header__logo","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","CLEAR_ORDER","GET_ORDER_NUMBER_REQUEST","GET_ORDER_NUMBER_SUCCESS","GET_ORDER_NUMBER_FAILED","CLEAR_ORDER_NUMBER","ADD_INGREDIENT_TO_CONSTRUCTOR","REMOVE_INGREDIENT_FROM_CONSTRUCTOR","ADD_BUN_TO_CONSTRUCTOR","MOVE_INGREDIENT_IN_CONSTRUCTOR","CLEAR_CONSTRUCTOR","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","SET_INGREDIENT_TO_MODAL","REMOVE_INGREDIENT_FROM_MODAL","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","GET_USER_INFO","SET_IS_AUTH","DELETE_IS_AUTH","CHANGE_USER_INFO","SET_WAS_ON_FORGOT_PAGE","DELETE_WAS_ON_FORGOT_PAGE","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","ClearConstructorAction","BurgerConstructorIngredient","props","dispatch","ref","useRef","moveCardHandler","dragIndex","hoverIndex","MoveIngredientInConstructorAction","useDrag","item","collect","monitor","isDragging","drag","opacity","useDrop","accept","hover","current","index","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","id","_id","style","constructorStyle","cursor","text","name","price","thumbnail","image","handleClose","uuid","apiURL","wssURL","sendData","options","a","fetch","url","method","headers","body","JSON","stringify","getData","refreshToken","token","localStorage","getItem","then","checkResponse","getCookie","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","deleteCookie","fetchWithRefresh","res","message","refreshData","setItem","accessToken","authorization","Promise","reject","ok","json","err","getUser","user","patchUser","form","ProtectedRoute","children","render","location","pathname","from","getDate","date","moment","locale","daysAgo","timeGreenwich","format","time","subtract","GetUserRequestAction","GetUserSuccessAction","GetUserFailedAction","SetIsAuthAction","payload","GetOrderFailedAction","GetOrderNumberFailedAction","ClearOrderNumberAction","GetIngredientsFailedActions","postLogout","history","success","catch","console","log","alert","postOrder","idsArr","ingredients","Error","status","order","number","getOrder","orderNumber","data","orders","getIngredients","BurgerConstructor","burgerConstructor","bun","ordersData","useHistory","useLocation","moveIngredient","ingredient","uuidv4","AddIngredientToConstructorAction","isHover","isOver","dropTarget","totalPrice","useMemo","reduce","acc","constructor","list","item_isHovering","isLocked","nobun_top","list__scroll","display","flexDirection","gap","alignItems","map","idx","key","nobun_bottom","price__box","size","onClick","push","background","BurgerIngredientDetail","counter","ingredientsCount","filter","length","draggable","product","count","src","alt","BurgerIngredients","useState","setCurrent","burgerIngredients","ingredientsRequest","ingredientsFailed","bunsRef","createRef","saucesRef","mainsRef","scrollRef","handleTabClick","construct","link","href","active","products","onScroll","e","scrollContainer","saucesContainer","mainsContainer","offsetTop","products__cont","HomePage","NotFound404","LoginPage","email","password","setValue","handleChange","target","wrapper","onSubmit","preventDefault","postLogin","title","box","placeholder","onChange","errorText","RegisterPage","postRegister","ForgotPasswordPage","emailValue","postForgotPassword","ResetPasswordPage","wasOnForgotPass","postResetPassword","ProfileOptions","isInput","setIsInput","nameRef","passRef","handleIconClick","removeAttribute","classList","remove","focus","handleBlur","setAttribute","add","useEffect","postChangeUserInfo","icon","error","onBlur","onIconClick","disabled","form__buttons","FeedItem","orderIngredients","Array","Set","find","curr","feedStyles","feed","feed__top","createdAt","feed__bottom","position","slice","image_mobile","zIndex","more","burgerConstructorStyle","total__price","wsActions","wsInit","onOpen","onClose","onError","onMessage","WsConnectionStartAction","WsConnectionClosedAction","ProfileOrders","wsData","wsConnected","wsError","textAlign","ProfilePage","action","isOrders","cont","menu","menuItem","menuSubtitle","component","FeedPage","total","totalToday","feeds__container","feeds","feed__info","feed__board","feed__boardLeft","feed__completed","feed__boardRight","feed__inProgress","feed__mainTitle","ModalOverlay","overlay","Modal","closeModal","goBack","handleCloseModal","keyCode","addEventListener","removeEventListener","ReactDOM","createPortal","modal","close","getElementById","IngredientDetails","useParams","margin","image_large","card","calories","proteins","fat","carbohydrates","OrderDetails","imgDone","subtitle","FeedDetail","currOrder","Number","ingredient__info","ingredient__image","ingredient__price","feed__footer","App","main__container","FeedDetails","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ingredientDetails","authRequest","authFailed","Boolean","orderRequest","orderFailed","orderNumberRequest","orderNumberFailed","rootReducer","combineReducers","dragCard","splice","removeItem","orderMiddleWare","store","socket","next","WebSocket","onopen","onerror","event","onmessage","parsedData","parse","restParsedData","onclose","configureStore","reducer","middleware","getDefaultMiddleware","concat","StrictMode","DndProvider","backend","HTML5Backend"],"mappings":"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","file":"static/js/main.4b2c15b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"burger-constructor_constructor__Zep9o\",\"list\":\"burger-constructor_list__1iGYa\",\"item\":\"burger-constructor_item__2Zrge\",\"list__scroll\":\"burger-constructor_list__scroll__2GEaM burger-constructor_list__1iGYa\",\"price__box\":\"burger-constructor_price__box__JA2VV\",\"price\":\"burger-constructor_price__3XwLb\",\"nobun\":\"burger-constructor_nobun__q4XTd\",\"nobun_top\":\"burger-constructor_nobun_top__3n6Jw burger-constructor_nobun__q4XTd\",\"nobun_bottom\":\"burger-constructor_nobun_bottom__2mwSt burger-constructor_nobun__q4XTd\",\"item_isHovering\":\"burger-constructor_item_isHovering__2TgKn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"not-found_container__2AK5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"profile-orders_orders__1JXEs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__3bWLY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feeds__container\":\"feed_feeds__container__2VPp7\",\"feeds\":\"feed_feeds__2XC26\",\"ingredients\":\"feed_ingredients__2cPKU\",\"ingredient\":\"feed_ingredient__3jIz8\",\"feed\":\"feed_feed__1vLAT\",\"feed__top\":\"feed_feed__top__1B2YM\",\"feed__bottom\":\"feed_feed__bottom__2h-U2\",\"feed__info\":\"feed_feed__info__Eymkw\",\"feed__board\":\"feed_feed__board__2EfVC\",\"feed__boardLeft\":\"feed_feed__boardLeft__1YHFn\",\"feed__boardRight\":\"feed_feed__boardRight__NK8dW\",\"feed__completed\":\"feed_feed__completed__3uSRy\",\"feed__inProgress\":\"feed_feed__inProgress__2SUL-\",\"feed__mainTitle\":\"feed_feed__mainTitle__3B8DF\",\"more\":\"feed_more__1O9RX\"};","import { TypedUseSelectorHook, useDispatch as dispatchHook, useSelector as selectorHook } from 'react-redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { TUsersActions } from \"../actions/users\";\r\nimport { TConstructorActions } from \"../actions/burger-constructor\";\r\nimport { TIngredientsActions } from \"../actions/burger-ingredients\";\r\nimport { TOrdersActions } from \"../actions/orders\";\r\nimport { TWsActions } from \"../actions/ws\";\r\nimport { rootReducer } from \"../../services/reducers\";\r\nimport { wsActions } from \"../actions/ws\";\r\n\r\nexport type TUser = {\r\n    email: string;\r\n    name: string;\r\n}\r\n\r\nexport type TUserData = {\r\n    name: string,\r\n    email: string,\r\n    password: string\r\n}\r\n\r\nexport type TPasswordData = {\r\n    password: string, \r\n    token: string \r\n}\r\n\r\ntype TApplicationActions = TUsersActions | TConstructorActions | TIngredientsActions | TOrdersActions | TWsActions;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    RootState,\r\n    unknown,\r\n    TApplicationActions\r\n>\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type AppDispatch = <TReturnType>(action: TApplicationActions | AppThunk | undefined) => TReturnType;\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch>();\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\nexport type TFeedItem = {\r\n    createdAt: string;\r\n    ingredients: [string];\r\n    name: string;\r\n    number: number;\r\n    status: string;\r\n    updatedAt: string;\r\n    _id: string;\r\n    owner?: string;\r\n}\r\n\r\nexport type wsActionsType = typeof wsActions;","import { NavLink, useRouteMatch } from 'react-router-dom';\r\nimport styles from './app-header.module.css';\r\nimport { BurgerIcon, ListIcon, Logo, ProfileIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useSelector } from '../../services/types';\r\n\r\nexport default function AppHeader() {\r\n  const { isAuth } = useSelector((state) => state.usersData);\r\n  const isConstructor = !!useRouteMatch({ path: '/', exact: true});\r\n  const isProfile = !!useRouteMatch('/profile');\r\n  const isLogin = !!useRouteMatch('/login');\r\n  const isIngredient = !!useRouteMatch('/ingredients/:id');  \r\n  const isFeed = !!useRouteMatch('/feed');\r\n\r\n  return (\r\n      <header className={`${styles.header} p-4`}>\r\n        <div className={styles.container}>  \r\n          <nav className={styles.nav}> \r\n            <ul className={styles.nav__menu}>\r\n              <li className={`${styles.nav__item} pl-5 pr-5 pt-2 pb-2`}>\r\n                <NavLink exact to=\"/\" className={`${styles.nav__link} ${(isConstructor || isIngredient) ? styles.nav__linkActive : ''} text text_type_main-default`}>\r\n                    <BurgerIcon type={(isConstructor || isIngredient) ? \"primary\" : \"secondary\"} />\r\n                      <p>Конструктор</p>\r\n                  </NavLink>                \r\n              </li>\r\n              <li className={`${styles.nav__item} pl-4 pr-4 pt-2 pb-2`}>\r\n                <NavLink exact to=\"/feed\" activeClassName={styles.nav__linkActive} className={`${styles.nav__link} text text_type_main-default`}>\r\n                    <ListIcon type={isFeed ? \"primary\" : \"secondary\"} />\r\n                      <p>Лента заказов</p>\r\n                </NavLink>                 \r\n              </li>\r\n            </ul>\r\n            <div className={styles.header__logo}>\r\n              <NavLink exact to=\"/\" activeClassName={styles.nav__linkActive} className={`${styles.nav__link} ${styles.nav__linkActive} text text_type_main-default`}>              \r\n                <Logo />\r\n              </NavLink>               \r\n            </div>           \r\n            {isAuth ? (\r\n                <NavLink exact to={\"/profile\"} activeClassName={styles.nav__linkActive} className={`${styles.nav__link} ${isProfile ? styles.nav__linkActive : ''} text text_type_main-default pl-4 pr-4 pt-2 pb-2`}>\r\n                  <ProfileIcon type={isProfile ? \"primary\" : \"secondary\"} />\r\n                    <span>Личный кабинет</span>\r\n                </NavLink>\r\n            ) : (\r\n                <NavLink exact to={\"/login\"} activeClassName={styles.nav__linkActive} className={`${styles.nav__link} text text_type_main-default pl-4 pr-4 pt-2 pb-2`}>\r\n                  <ProfileIcon type={isLogin ? \"primary\" : \"secondary\"} />\r\n                    <span>Личный кабинет</span>\r\n                </NavLink>\r\n            )}\r\n          </nav>\r\n        </div> \r\n      </header>\r\n  );\r\n}","export const GET_ORDER_REQUEST = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_FAILED = 'GET_ORDER_FAILED';\r\nexport const CLEAR_ORDER = 'CLEAR_ORDER';\r\nexport const GET_ORDER_NUMBER_REQUEST = 'GET_ORDER_NUMBER_REQUEST';\r\nexport const GET_ORDER_NUMBER_SUCCESS = 'GET_ORDER_NUMBER_SUCCESS';\r\nexport const GET_ORDER_NUMBER_FAILED = 'GET_ORDER_NUMBER_FAILED';\r\nexport const CLEAR_ORDER_NUMBER = 'CLEAR_ORDER_NUMBER';\r\nexport const ADD_INGREDIENT_TO_CONSTRUCTOR = 'ADD_INGREDIENT_TO_CONSTRUCTOR';\r\nexport const REMOVE_INGREDIENT_FROM_CONSTRUCTOR = 'REMOVE_INGREDIENT_FROM_CONSTRUCTOR';\r\nexport const ADD_BUN_TO_CONSTRUCTOR = 'ADD_BUN_TO_CONSTRUCTOR';\r\nexport const MOVE_INGREDIENT_IN_CONSTRUCTOR = 'MOVE_INGREDIENT_IN_CONSTRUCTOR';\r\nexport const CLEAR_CONSTRUCTOR = 'CLEAR_CONSTRUCTOR';\r\nexport const GET_INGREDIENTS_REQUEST = 'GET_ITEMS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_ITEMS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED = 'GET_ITEMS_FAILED';\r\nexport const SET_INGREDIENT_TO_MODAL = 'SET_INGREDIENT_TO_MODAL';\r\nexport const REMOVE_INGREDIENT_FROM_MODAL = 'REMOVE_INGREDIENT_FROM_MODAL';\r\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\r\nexport const GET_USER_FAILED = 'GET_USER_FAILED';\r\nexport const GET_USER_INFO = 'GET_USER_INFO';\r\nexport const SET_IS_AUTH = 'SET_IS_AUTH';\r\nexport const DELETE_IS_AUTH = 'DELETE_IS_AUTH';\r\nexport const CHANGE_USER_INFO = 'CHANGE_USER_INFO';\r\nexport const SET_WAS_ON_FORGOT_PAGE = 'SET_WAS_ON_FORGOT_PAGE';\r\nexport const DELETE_WAS_ON_FORGOT_PAGE = 'DELETE_WAS_ON_FORGOT_PAGE';\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\n","import {\r\n    ADD_INGREDIENT_TO_CONSTRUCTOR,\r\n    REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\r\n    ADD_BUN_TO_CONSTRUCTOR,\r\n    MOVE_INGREDIENT_IN_CONSTRUCTOR,\r\n    CLEAR_CONSTRUCTOR\r\n  } from '../constants';\r\nimport { TBurgerConstructorProps } from '../../utils/prop-types';\r\n\r\nexport interface IAddIngredientToConstructorAction {\r\n    readonly type: typeof ADD_INGREDIENT_TO_CONSTRUCTOR;\r\n    readonly item: TBurgerConstructorProps;\r\n}\r\nexport interface IRemoveIngredientFromConstructorAction {\r\n    readonly type: typeof REMOVE_INGREDIENT_FROM_CONSTRUCTOR;\r\n    readonly id: string;\r\n}\r\nexport interface IAddBunToConstructorAction {\r\n    readonly type: typeof ADD_BUN_TO_CONSTRUCTOR;\r\n    readonly item: TBurgerConstructorProps;\r\n}\r\nexport interface IMoveIngredientInConstructorAction {\r\n    readonly type: typeof MOVE_INGREDIENT_IN_CONSTRUCTOR;\r\n    readonly dragIndex: number;\r\n    readonly hoverIndex: number;    \r\n}\r\nexport interface IClearConstructorAction {\r\n    readonly type: typeof CLEAR_CONSTRUCTOR;\r\n}\r\nexport type TConstructorActions =\r\n    IAddIngredientToConstructorAction |\r\n    IRemoveIngredientFromConstructorAction |\r\n    IAddBunToConstructorAction |\r\n    IMoveIngredientInConstructorAction |\r\n    IClearConstructorAction;\r\n\r\nexport function AddBunToConstructorAction(item: TBurgerConstructorProps): IAddBunToConstructorAction {\r\n    return ({\r\n        type: ADD_BUN_TO_CONSTRUCTOR,\r\n        item\r\n    });\r\n}\r\nexport function AddIngredientToConstructorAction(item: TBurgerConstructorProps): IAddIngredientToConstructorAction {\r\n    return ({\r\n        type: ADD_INGREDIENT_TO_CONSTRUCTOR,\r\n        item\r\n    });\r\n}\r\nexport function MoveIngredientInConstructorAction(dragIndex: number, hoverIndex: number): IMoveIngredientInConstructorAction {\r\n    return ({\r\n        type: MOVE_INGREDIENT_IN_CONSTRUCTOR,\r\n        dragIndex, \r\n        hoverIndex\r\n    });\r\n}\r\nexport function RemoveIngredientFromConstructorAction(id: string): IRemoveIngredientFromConstructorAction {\r\n    return ({\r\n        type: REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\r\n        id\r\n    });\r\n}\r\nexport function ClearConstructorAction(): IClearConstructorAction {\r\n    return ({\r\n        type: CLEAR_CONSTRUCTOR\r\n    });\r\n}","import { useRef } from 'react';\r\nimport { ConstructorElement, DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport constructorStyle from \"../burger-constructor/burger-constructor.module.css\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { TBurgerIngredientProps, TBurgerConstructorIngredientProps } from '../../utils/prop-types';\r\nimport { MoveIngredientInConstructorAction, RemoveIngredientFromConstructorAction } from '../../services/actions/burger-constructor';  \r\nimport { useDispatch } from '../../services/types';\r\n\r\nexport default function BurgerConstructorIngredient (props: TBurgerConstructorIngredientProps) {\r\n    const dispatch = useDispatch();\r\n    const handleRemoveIngredient = () => {\r\n        dispatch(RemoveIngredientFromConstructorAction(props.uuid));\r\n    }\r\n    const ref = useRef<HTMLLIElement>(null);\r\n    const moveCardHandler = (dragIndex: number, hoverIndex: number) => {\r\n        dispatch(MoveIngredientInConstructorAction(dragIndex, hoverIndex));\r\n    }\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: 'sortable',\r\n        item: () => {\r\n            return { ...props };\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    const opacity = isDragging ? 0 : 1;\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'sortable',\r\n        hover(item: TBurgerIngredientProps, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = props.index;\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset: any = monitor.getClientOffset();\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            moveCardHandler(dragIndex, hoverIndex);\r\n            item.index = hoverIndex\r\n        },\r\n    });\r\n    drag(drop(ref))\r\n\r\n    return (<li id={props._id} style={{opacity: opacity}} className={constructorStyle.item} ref={ref}>\r\n        <div className=\"mr-2\" style={{cursor: 'pointer'}}>\r\n            <DragIcon type={\"primary\"} />\r\n        </div>\r\n        <ConstructorElement text={props.name} price={props.price} thumbnail={props.image} handleClose={handleRemoveIngredient} />\r\n    </li>)\r\n}","export const apiURL = 'https://norma.nomoreparties.space/api';\r\nexport const wssURL = 'wss://norma.nomoreparties.space/orders';\r\nexport const localURL = 'http://localhost:3000'","import { Redirect, Route } from 'react-router-dom';\r\nimport { apiURL } from \"./constants\";\r\nimport { TSetCookieProps, TProtectedRouteProps, TSendDataProps } from './prop-types';\r\nimport { TUserData, useSelector } from '../services/types';\r\nimport moment, { Moment } from 'moment';\r\nimport 'moment/locale/ru'\r\n\r\nexport async function sendData(options: TSendDataProps) {\r\n    return await fetch(options.url, {\r\n        method: options.method,\r\n        headers: options.headers,\r\n        body: JSON.stringify(options.body)\r\n    })\r\n}\r\n\r\nexport async function getData(url: string) {\r\n    return await fetch(url)\r\n}\r\n\r\nexport function refreshToken() {\r\n    return fetch(`${apiURL}/auth/token`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify({\r\n            token: localStorage.getItem(\"refreshToken\"),\r\n        }),\r\n    }).then(checkResponse);\r\n};\r\n\r\nexport function getCookie(name: string) {\r\n    // eslint-disable-next-line\r\n    const matches = document.cookie.match(new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function setCookie(name: string, value: string, props: TSetCookieProps = {}) {\r\n    props = {\r\n        path: '/',\r\n        ...props\r\n    };\r\n    let exp = props.expires;\r\n    if (typeof exp == 'number' && exp) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + exp * 1000);\r\n        exp = props.expires = d;\r\n    }\r\n    if (exp && exp instanceof Date) {\r\n        props.expires = exp.toUTCString();\r\n    }\r\n    value = encodeURIComponent(value);\r\n    let updatedCookie = name + '=' + value;\r\n    for (const propName in props) {\r\n        updatedCookie += '; ' + propName;\r\n        const propValue = (props as { [key: string]: string | boolean })[propName];\r\n        if (propValue !== true) {\r\n            updatedCookie += '=' + propValue;\r\n        }\r\n    }\r\n    document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n    setCookie(name, '', {expires: -1});\r\n}\r\n\r\nexport async function fetchWithRefresh(url: string, options: RequestInit = {}) {\r\n    try {\r\n        const res = await fetch(url, options);\r\n        return await checkResponse(res);\r\n    } catch (err: any) {\r\n        if (err.message === \"jwt expired\") {\r\n            const refreshData = await refreshToken();\r\n            localStorage.setItem(\"refreshToken\", refreshData.refreshToken);\r\n            setCookie(\"token\", refreshData.accessToken);\r\n            (options.headers as { [key: string]: string }).authorization = refreshData.accessToken;\r\n            const res = await fetch(url, options);\r\n            return await checkResponse(res);\r\n        } else {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n};\r\n\r\nexport function checkResponse(res: Response) {\r\n    return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\r\n};\r\n\r\nexport async function getUser() {\r\n    const accessToken = getCookie('token')\r\n    if (!accessToken) {\r\n        return { user: null };\r\n    }    \r\n    return await fetchWithRefresh(`${apiURL}/auth/user`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'authorization': accessToken\r\n        }\r\n    })\r\n}\r\n\r\nexport async function patchUser(form: TUserData) {\r\n    const accessToken = getCookie('token')\r\n    if (!accessToken) {\r\n        return { user: null };\r\n    }    \r\n    return await fetchWithRefresh(`${apiURL}/auth/user`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'authorization': accessToken\r\n        },\r\n        body: JSON.stringify(form)\r\n    })\r\n}\r\n\r\nexport function ProtectedRoute({ children, exact, path }: TProtectedRouteProps) {\r\n    const { isAuth } = useSelector((state) => state.usersData);\r\n    return (\r\n        <Route\r\n            exact={exact}\r\n            path={path}\r\n            render={({ location }) =>\r\n                isAuth ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport function getDate (date: Moment | string | undefined) {\r\n    moment.locale('ru');\r\n    date = moment(date);\r\n    let daysAgo: string = date.from(moment());\r\n    const timeGreenwich = `${moment(date).format('ZZ')[0]}${moment(date).format('ZZ')[2]}`;\r\n    const time = moment(date).format(`HH:mm i-[GMT]${timeGreenwich}`);\r\n    if (date.format('MMMM DD YYYY') === moment().subtract(1, 'days').format('MMMM DD YYYY')\r\n        || daysAgo === 'день назад') {\r\n        daysAgo = 'Вчера';\r\n    }\r\n    if (date.format('MMMM DD YYYY') === moment().format('MMMM DD YYYY'))\r\n        daysAgo = 'Сегодня';\r\n    const newDate = `${daysAgo}, ${time}`;\r\n    return newDate;\r\n} ","import {\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    GET_USER_FAILED,\r\n    GET_USER_INFO,\r\n    CHANGE_USER_INFO,\r\n    SET_IS_AUTH,\r\n    DELETE_IS_AUTH,\r\n    SET_WAS_ON_FORGOT_PAGE,\r\n    DELETE_WAS_ON_FORGOT_PAGE\r\n  } from '../constants';\r\nimport { TUser } from \"../types\";\r\n\r\nexport interface IGetUserRequestAction {\r\n    readonly type: typeof GET_USER_REQUEST;\r\n}\r\nexport interface IGetUserSuccessAction {\r\n    readonly type: typeof GET_USER_SUCCESS;\r\n    readonly user: TUser;\r\n}\r\nexport interface IGetUserFailedAction {\r\n    readonly type: typeof GET_USER_FAILED;\r\n}\r\nexport interface IGetUserInfoAction {\r\n    readonly type: typeof GET_USER_INFO;\r\n    readonly user: TUser;\r\n}\r\nexport interface IChangeUserInfoAction {\r\n    readonly type: typeof CHANGE_USER_INFO;\r\n    readonly payload: {\r\n        user: TUser\r\n    }    \r\n}\r\nexport interface ISetIsAuthAction {\r\n    readonly type: typeof SET_IS_AUTH;\r\n    readonly payload: {\r\n        accessToken: string,\r\n        refreshToken: string\r\n    }    \r\n}\r\nexport interface IDeleteIsAuthAction {\r\n    readonly type: typeof DELETE_IS_AUTH;\r\n}\r\nexport interface ISetWasOnForgotPageAction {\r\n    readonly type: typeof SET_WAS_ON_FORGOT_PAGE;\r\n}export interface IDeleteWasOnForgotPageAction {\r\n    readonly type: typeof DELETE_WAS_ON_FORGOT_PAGE;\r\n}\r\nexport type TUsersActions =\r\n  IGetUserRequestAction |\r\n  IGetUserSuccessAction |\r\n  IGetUserFailedAction |\r\n  IGetUserInfoAction |\r\n  IChangeUserInfoAction |  \r\n  ISetIsAuthAction |\r\n  IDeleteIsAuthAction |\r\n  ISetWasOnForgotPageAction |\r\n  IDeleteWasOnForgotPageAction;\r\n\r\nexport function GetUserRequestAction(): IGetUserRequestAction {\r\n    return ({\r\n        type: GET_USER_REQUEST\r\n    });\r\n}\r\nexport function GetUserSuccessAction(user: TUser): IGetUserSuccessAction {\r\n    return ({\r\n        type: GET_USER_SUCCESS,\r\n        user\r\n    });\r\n}\r\nexport function GetUserFailedAction(): IGetUserFailedAction {\r\n    return ({\r\n        type: GET_USER_FAILED\r\n    });\r\n}\r\nexport function SetIsAuthAction(accessToken: string, refreshToken: string): ISetIsAuthAction {\r\n    return ({\r\n        type: SET_IS_AUTH,\r\n        payload: { accessToken, refreshToken }\r\n    });\r\n}\r\nexport function DeleteIsAuthAction(): IDeleteIsAuthAction {\r\n    return ({\r\n        type: DELETE_IS_AUTH\r\n    });\r\n}\r\nexport function GetUserInfoAction(user: TUser): IGetUserInfoAction {\r\n    return ({\r\n        type: GET_USER_INFO,\r\n        user        \r\n    });\r\n}\r\nexport function ChangeUserInfoAction(user: TUser): IChangeUserInfoAction {\r\n    return ({       \r\n        type: CHANGE_USER_INFO,\r\n        payload: { user }         \r\n    });\r\n}\r\nexport function SetWasOnForgotPageAction(): ISetWasOnForgotPageAction {\r\n    return ({\r\n        type: SET_WAS_ON_FORGOT_PAGE\r\n    });\r\n}\r\nexport function DeleteWasOnForgotPageAction(): IDeleteWasOnForgotPageAction {\r\n    return ({\r\n        type: DELETE_WAS_ON_FORGOT_PAGE\r\n    });\r\n}","import {\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_SUCCESS,\r\n    GET_ORDER_FAILED,\r\n    CLEAR_ORDER,    \r\n    GET_ORDER_NUMBER_REQUEST,\r\n    GET_ORDER_NUMBER_SUCCESS,\r\n    GET_ORDER_NUMBER_FAILED,\r\n    CLEAR_ORDER_NUMBER\r\n} from '../constants';\r\nimport { TFeedItem } from \"../types\";\r\n\r\nexport interface IGetOrderRequestAction {\r\n    readonly type: typeof GET_ORDER_REQUEST;\r\n}\r\nexport interface IGetOrderSuccessAction {\r\n    readonly type: typeof GET_ORDER_SUCCESS;\r\n    readonly payload: TFeedItem[]; \r\n}\r\nexport interface IGetOrderFailedAction {\r\n    readonly type: typeof GET_ORDER_FAILED;\r\n}\r\nexport interface IClearOrderAction {\r\n    readonly type: typeof CLEAR_ORDER;\r\n}  \r\nexport interface IGetOrderNumberRequestsAction {\r\n    readonly type: typeof GET_ORDER_NUMBER_REQUEST;\r\n}\r\nexport interface IGetOrderNumberSuccessAction {\r\n    readonly type: typeof GET_ORDER_NUMBER_SUCCESS;\r\n    readonly payload: string;\r\n}\r\nexport interface IGetOrderNumberFailedAction {\r\n    readonly type: typeof GET_ORDER_NUMBER_FAILED;\r\n}\r\nexport interface IClearOrderNumberAction {\r\n    readonly type: typeof CLEAR_ORDER_NUMBER;\r\n}\r\n\r\nexport type TOrdersActions =\r\n    IGetOrderRequestAction |\r\n    IGetOrderSuccessAction |\r\n    IGetOrderFailedAction |\r\n    IClearOrderAction |\r\n    IGetOrderNumberRequestsAction |\r\n    IGetOrderNumberSuccessAction |\r\n    IGetOrderNumberFailedAction |\r\n    IClearOrderNumberAction;\r\n\r\nexport function GetOrderRequestAction(): IGetOrderRequestAction {\r\n    return ({\r\n        type: GET_ORDER_REQUEST\r\n    });\r\n}\r\nexport function GetOrderSuccessAction(payload: TFeedItem[]): IGetOrderSuccessAction {\r\n    return ({\r\n        type: GET_ORDER_SUCCESS,\r\n        payload\r\n    });\r\n}\r\nexport function GetOrderFailedAction(): IGetOrderFailedAction {\r\n    return ({\r\n        type: GET_ORDER_FAILED\r\n    });\r\n}\r\nexport function ClearOrderAction(): IClearOrderAction {\r\n    return ({\r\n        type: CLEAR_ORDER\r\n    });\r\n}    \r\nexport function GetOrderNumberRequestsAction(): IGetOrderNumberRequestsAction {\r\n    return ({\r\n        type: GET_ORDER_NUMBER_REQUEST\r\n    });\r\n}\r\nexport function GetOrderNumberSuccessAction(payload: string): IGetOrderNumberSuccessAction {\r\n    return ({\r\n        type: GET_ORDER_NUMBER_SUCCESS,\r\n        payload\r\n    });\r\n} \r\nexport function GetOrderNumberFailedAction(): IGetOrderNumberFailedAction {\r\n    return ({\r\n        type: GET_ORDER_NUMBER_FAILED\r\n    });\r\n}      \r\nexport function ClearOrderNumberAction(): IClearOrderNumberAction {\r\n    return ({\r\n        type: CLEAR_ORDER_NUMBER\r\n    });\r\n}   ","import {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED,\r\n    SET_INGREDIENT_TO_MODAL,\r\n    REMOVE_INGREDIENT_FROM_MODAL\r\n  } from '../constants';\r\nimport { TBurgerIngredientProps } from '../../utils/prop-types';\r\n\r\nexport interface IGetIngredientsRequestsActions {\r\n    readonly type: typeof GET_INGREDIENTS_REQUEST;\r\n}\r\nexport interface IGetIngredientsSuccessActions {\r\n    readonly type: typeof GET_INGREDIENTS_SUCCESS,\r\n    readonly ingredients: TBurgerIngredientProps[]\r\n}\r\nexport interface IGetIngredientsFailedActions {\r\n    readonly type: typeof GET_INGREDIENTS_FAILED;\r\n}\r\nexport interface ISetIngredientToModalActions {\r\n    readonly type: typeof SET_INGREDIENT_TO_MODAL;\r\n    readonly item: TBurgerIngredientProps;\r\n}\r\nexport interface IRemoveIngredientFromModalActions {\r\n    readonly type: typeof REMOVE_INGREDIENT_FROM_MODAL;\r\n}\r\nexport type TIngredientsActions =\r\n    IGetIngredientsRequestsActions |\r\n    IGetIngredientsSuccessActions |\r\n    IGetIngredientsFailedActions |\r\n    ISetIngredientToModalActions |\r\n    IRemoveIngredientFromModalActions;\r\n\r\nexport function GetIngredientsRequestsActions(): IGetIngredientsRequestsActions {\r\n    return ({\r\n        type: GET_INGREDIENTS_REQUEST\r\n    });\r\n}\r\nexport function GetIngredientsSuccessActions(ingredients: TBurgerIngredientProps[]): IGetIngredientsSuccessActions {\r\n    return ({\r\n        type: GET_INGREDIENTS_SUCCESS,\r\n        ingredients\r\n    });\r\n}\r\nexport function GetIngredientsFailedActions(): IGetIngredientsFailedActions {\r\n    return ({\r\n        type: GET_INGREDIENTS_FAILED\r\n    });\r\n}\r\n\r\nexport function RemoveIngredientFromModalActions(): IRemoveIngredientFromModalActions {\r\n    return ({\r\n        type: REMOVE_INGREDIENT_FROM_MODAL\r\n    });\r\n}","import { History } from 'history';\r\nimport { checkResponse, getUser, patchUser, getData, sendData, getCookie } from \"../utils/funcs\";\r\nimport { apiURL } from \"../utils/constants\";\r\nimport { TUserData, TPasswordData, AppDispatch, AppThunk } from \"./types\";\r\nimport { \r\n    GetUserRequestAction, GetUserFailedAction, GetUserSuccessAction, SetIsAuthAction, \r\n    DeleteIsAuthAction, GetUserInfoAction, ChangeUserInfoAction\r\n} from \"./actions/users\"\r\nimport { GetOrderRequestAction, GetOrderFailedAction, GetOrderSuccessAction, \r\n    GetOrderNumberRequestsAction, GetOrderNumberSuccessAction, GetOrderNumberFailedAction, ClearOrderNumberAction } from \"./actions/orders\"\r\nimport { GetIngredientsRequestsActions, GetIngredientsSuccessActions, GetIngredientsFailedActions } from \"./actions/burger-ingredients\"\r\n\r\nexport function postForgotPassword(emailValue: string, history: History): AppThunk {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch(GetUserRequestAction())\r\n        sendData({\r\n            url: `${apiURL}/password-reset`,\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: {email: emailValue}\r\n        })\r\n            .then(res => checkResponse(res))\r\n            .then(res => {\r\n                    if (res && res.success) {\r\n                        history.push('/reset-password');\r\n                    } else {\r\n                        dispatch(GetUserFailedAction())\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch(GetUserFailedAction())\r\n            })\r\n    }\r\n}\r\n\r\nexport function postResetPassword(form: TPasswordData, history: History): AppThunk {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch(GetUserRequestAction())\r\n        sendData({\r\n            url: `${apiURL}/password-reset/reset`,\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: {\r\n                password: form.password,\r\n                token: form.token\r\n            }\r\n        })\r\n            .then(res => checkResponse(res))\r\n            .then(res => {\r\n                    if (res && res.success) {\r\n                        history.push('/login');\r\n                    } else {\r\n                        dispatch(GetUserFailedAction())\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch(GetUserFailedAction())\r\n            })\r\n    }\r\n}\r\n\r\nexport function postRegister (form: TUserData, history: History): AppThunk {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch(GetUserRequestAction())\r\n        sendData({\r\n            url: `${apiURL}/auth/register`,\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: {\r\n                email: form.email,\r\n                password: form.password,\r\n                name: form.name\r\n            }\r\n        })\r\n            .then(res => checkResponse(res))\r\n            .then(res => {\r\n                    if (res && res.success) {\r\n                        dispatch(GetUserSuccessAction(res.user));\r\n                        dispatch(SetIsAuthAction(res.accessToken, res.refreshToken))\r\n                        history.push({pathname: \"/\"});\r\n                    } else {\r\n                        dispatch(GetUserFailedAction())\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch(GetUserFailedAction())\r\n            })\r\n    }\r\n}\r\n\r\nexport function postLogin(form: Omit<TUserData, 'name'>, history: History, from: { pathname: string }): AppThunk {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch(GetUserRequestAction());\r\n        sendData({\r\n            url: `${apiURL}/auth/login`,\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: {\r\n                email: form.email,\r\n                password: form.password,\r\n            }\r\n        })\r\n            .then(res => checkResponse(res))\r\n            .then(res => {\r\n                    if (res && res.success) {\r\n                        dispatch(GetUserSuccessAction(res.user));\r\n                        dispatch(SetIsAuthAction(res.accessToken, res.refreshToken))\r\n                        history.replace(from)\r\n                    } else {\r\n                        dispatch(GetUserFailedAction())\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n                dispatch(GetUserFailedAction())\r\n            })\r\n    }\r\n}\r\n\r\nexport function postLogout(history: History): AppThunk {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch(GetUserRequestAction())\r\n        sendData({\r\n            url: `${apiURL}/auth/logout`,\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: { token: localStorage.getItem('refreshToken') }\r\n        })\r\n            .then(res => checkResponse(res))\r\n            .then(res => {\r\n                    if (res && res.success) {\r\n                        dispatch(DeleteIsAuthAction())\r\n                        history.replace({pathname: '/login'})\r\n                    } else {\r\n                        dispatch(GetUserFailedAction())\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n                dispatch(GetUserFailedAction())\r\n            })\r\n    }\r\n}\r\n\r\nexport function getUserInfo(): AppThunk {\r\n    return async function (dispatch: AppDispatch) {\r\n        dispatch(GetUserRequestAction())\r\n        await getUser()\r\n            .then(res => {\r\n                    if (res && res.success) {\r\n                        dispatch(GetUserInfoAction(res.user))\r\n                    } else {\r\n                        dispatch(GetUserFailedAction())\r\n                    }\r\n                }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch(GetUserFailedAction())\r\n            })\r\n    }\r\n}\r\n\r\nexport function postChangeUserInfo(form: TUserData): AppThunk {\r\n    return async function (dispatch: AppDispatch) {\r\n        dispatch(GetUserRequestAction())\r\n        await patchUser(form)\r\n        .then(res => {\r\n            if (res && res.success) {\r\n                dispatch(ChangeUserInfoAction(res.user))\r\n            } else {\r\n                dispatch(GetUserFailedAction())\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            dispatch(GetUserFailedAction())\r\n        })\r\n    }\r\n}\r\n\r\nexport function postOrder(idsArr: string[]): AppThunk {\r\n    const accessToken = getCookie('token')\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch(GetOrderNumberRequestsAction())\r\n        sendData({\r\n            url: `${apiURL}/orders`,\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'authorization': accessToken\r\n            },\r\n            body: {ingredients: idsArr}\r\n        })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(`Произошла непредвиденная ошибка: ${res.status}`)\r\n        })\r\n        .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch(GetOrderNumberSuccessAction(res.order.number))\r\n                } else {\r\n                    dispatch(GetOrderNumberFailedAction())\r\n                }\r\n            }\r\n        )\r\n        .catch(err => {\r\n            console.log(err)\r\n            dispatch(GetOrderNumberFailedAction())\r\n            dispatch(ClearOrderNumberAction())\r\n        })\r\n    }\r\n}\r\n\r\nexport function getOrder (orderNumber: string): AppThunk {\r\n    return function (dispatch: AppDispatch) {\r\n      dispatch(GetOrderRequestAction())\r\n      getData(`${apiURL}/orders/${orderNumber}`)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            return res.json();\r\n          }\r\n          throw new Error(`Cannot get data from API. Status code: ${res.status}`);\r\n        })\r\n        .then(data => {\r\n          if (data && data.success) {\r\n            dispatch(GetOrderSuccessAction(data.orders))\r\n          } else {\r\n            dispatch(GetOrderFailedAction())\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          dispatch(GetOrderFailedAction())\r\n        })\r\n    }\r\n}\r\n\r\nexport function getIngredients(): AppThunk {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch(GetIngredientsRequestsActions())\r\n        getData(`${apiURL}/ingredients`)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                throw new Error(`При загрузке данных произошла ошибка: ${res.status}`);\r\n            })\r\n            .then(data => {\r\n                if (data && data.success) {\r\n                    dispatch(GetIngredientsSuccessActions(data.data))\r\n                } else {\r\n                    dispatch(GetIngredientsFailedActions())\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch(GetIngredientsFailedActions())\r\n            })\r\n    }\r\n}","import { useMemo } from 'react';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport style from './burger-constructor.module.css';\r\nimport { Button, CurrencyIcon, ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport BurgerConstructorItem from \"../burger-constructor-item/burger-constructor-item\";\r\nimport { postOrder } from \"../../services/funcs\";\r\nimport { TBurgerConstructorProps } from '../../utils/prop-types';\r\nimport { AddBunToConstructorAction,  AddIngredientToConstructorAction, ClearConstructorAction } from '../../services/actions/burger-constructor'  \r\nimport { ClearOrderNumberAction } from '../../services/actions/orders'  \r\nimport { useDispatch, useSelector } from '../../services/types';\r\n\r\nexport default function BurgerConstructor() {  \r\n    const { ingredients, bun, orderNumber, isAuth } = useSelector((state) => ({\r\n        ingredients: state.burgerConstructor.ingredients,\r\n        bun: state.burgerConstructor.bun,\r\n        orderNumber: state.ordersData.orderNumber,\r\n        isAuth: state.usersData.isAuth      \r\n    }));\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    function moveIngredient (ingredient: TBurgerConstructorProps) {\r\n        dispatch((ingredient.type === 'bun') ? AddBunToConstructorAction({...ingredient, uuid: uuidv4()}) :     \r\n            AddIngredientToConstructorAction({...ingredient, uuid: uuidv4()}))            \r\n    }\r\n    const [{ isHover }, dropTarget] = useDrop({\r\n        accept: 'ingredients',\r\n        collect: monitor => ({ isHover: monitor.isOver() }),\r\n        drop(item: TBurgerConstructorProps) { moveIngredient(item); }\r\n    });\r\n    function handleOpenModal () {\r\n        dispatch(ClearOrderNumberAction());\r\n        if (!isAuth) {\r\n            return history.push('/login');\r\n        }        \r\n        if (!bun) { \r\n            return alert('Выберите булочку'); \r\n        }        \r\n        const idsArr = [...ingredients.map((item) => item._id), bun._id, bun._id];\r\n        dispatch(postOrder(idsArr));\r\n        history.push({\r\n            pathname: \"/sendorder\",\r\n            state: {\r\n                background: location,\r\n            },\r\n        });\r\n        orderNumber && dispatch(ClearConstructorAction())     \r\n    }\r\n    const totalPrice = useMemo(() => {\r\n        let price = ingredients.reduce((acc, item) => { return item.price + acc; }, 0);\r\n        bun && (price += bun.price * 2);\r\n        return price;\r\n    }, [ingredients, bun])\r\n\r\n    return (\r\n        <>\r\n            <div ref={dropTarget} className={`${style.constructor} mt-25`}>\r\n                <ul className={`${style.list}`} id=\"constructorList\">\r\n                    <li className={`${style.item} ${isHover ? style.item_isHovering : ''}`}>\r\n                        {bun ? (                        \r\n                            <ConstructorElement type=\"top\" isLocked={true} text={`${bun.name} (верх)`} price={bun.price} thumbnail={bun.image} />\r\n                        ) : (\r\n                            <div className={`${style.nobun_top} text text_type_main-default`}><p>Выберите булочку</p></div>\r\n                        )}                        \r\n                    </li>\r\n                    <li className={`${style.item} ${isHover ? style.item_isHovering : ''}`}>\r\n                        <ul className={style.list__scroll} style={{display: 'flex', flexDirection: 'column', gap: '10px', alignItems: \"flex-end\"}}>\r\n                            {ingredients.map((item, idx: number) => {\r\n                                return <BurgerConstructorItem {...item} index={idx} key={item.uuid} />\r\n                            })}\r\n                        </ul>\r\n                    </li>                    \r\n                    <li className={`${style.item} ${isHover ? style.item_isHovering : ''}`}>\r\n                        {bun ? (\r\n                            <ConstructorElement type=\"bottom\" isLocked={true} text={`${bun.name} (низ)`} price={bun.price} thumbnail={bun.image} />\r\n                        ) : (\r\n                            <div className={`${style.nobun_bottom} text text_type_main-default`}><p>Выберите булочку</p></div>\r\n                        )}\r\n                    </li>\r\n                </ul>\r\n                {(ingredients || bun) && (\r\n                    <div className={`${style.price__box} mr-8`}>\r\n                        <div className={`${style.price} mr-10`}>\r\n                            <span className=\"text text_type_digits-medium\">{totalPrice}</span>\r\n                            <CurrencyIcon type=\"primary\" />\r\n                        </div>\r\n                        <Button type=\"primary\" size=\"medium\" onClick={handleOpenModal}>Оформить заказ</Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}","import { useDrag }  from \"react-dnd\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport style from './burger-ingredients-detail.module.css';\r\nimport { CurrencyIcon, Counter } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { TBurgerIngredientDetailProps, TBurgerIngredientProps } from '../../utils/prop-types';\r\nimport { useSelector } from '../../services/types';\r\n\r\nexport default function BurgerIngredientDetail(props: TBurgerIngredientDetailProps) {\r\n    const location = useLocation();\r\n    const {ingredients, bun} = useSelector((state) => state.burgerConstructor);\r\n    let ingredientsCount = ingredients.filter((item: TBurgerIngredientProps) => item._id === props._id).length;\r\n    let counter;\r\n\r\n    if (props.type === 'bun' && bun && bun._id === props._id) {\r\n        counter = 2;\r\n    } else if (props.type !== 'bun' && ingredientsCount) {\r\n        counter = ingredientsCount\r\n    } else {\r\n        counter = 0;\r\n    }\r\n    const [{opacity}, ref] = useDrag({\r\n        type: 'ingredients',\r\n        item: {...props},\r\n        collect: monitor => ({\r\n            opacity: monitor.isDragging() ? 0.5 : 1\r\n        })\r\n    })\r\n    return (\r\n        <Link to={{ pathname: `/ingredients/${props._id}`, state: {background: location} }}\r\n            ref={ref} draggable className={style.product} style={{opacity: opacity}} id={props._id}>\r\n            {counter !== 0 && <Counter count={counter} />}\r\n            <img className={`${style.image} pr-4 pl-4`} src={props.image} alt=\"\"/>\r\n            <div className={`${style.price} mt-1 mb-1`}>\r\n                <span className='text text_type_digits-default mr-2'>{props.price}</span>\r\n                <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n            <p className={`${style.name} text text_type_main-default mt-1 mb-10`}>{props.name}</p>\r\n        </Link>\r\n    )\r\n}\r\n","import { createRef, useState, SyntheticEvent } from 'react';\r\nimport style from './burger-ingredients.module.css';\r\nimport BurgerIngrediensDetail from \"../burger-ingredients-detail/burger-ingredients-detail\";\r\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { TBurgerIngredientProps } from '../../utils/prop-types';\r\nimport { useSelector } from '../../services/types';\r\n\r\nexport default function BurgerIngredients() { \r\n    const [current, setCurrent] = useState<string>('bun');\r\n    const { ingredients, ingredientsRequest, ingredientsFailed } = useSelector((state)=> state.burgerIngredients) \r\n    const bunsRef = createRef<HTMLDivElement>();\r\n    const saucesRef = createRef<HTMLDivElement>();\r\n    const mainsRef  = createRef<HTMLDivElement>(); \r\n    const scrollRef = createRef<HTMLDivElement>();    \r\n\r\n    function handleTabClick (value: string) { \r\n        setCurrent(value); \r\n    }\r\n\r\n    function handleScroll (e: SyntheticEvent) {           \r\n        const scrollContainer = scrollRef.current;\r\n        const saucesContainer = saucesRef.current?.getBoundingClientRect();\r\n        const mainsContainer = mainsRef.current?.getBoundingClientRect();\r\n        if (scrollContainer !== null && saucesContainer && mainsContainer) {\r\n            if (scrollContainer.offsetTop - saucesContainer.top < 0) {\r\n                setCurrent('bun');\r\n            } else if (scrollContainer.offsetTop - mainsContainer.top < 0) {\r\n                setCurrent('sauce');\r\n            } else {\r\n                setCurrent('main');\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {ingredientsRequest && !ingredientsFailed && ( <h1>Идет загрузка...</h1> )}\r\n            {ingredientsFailed && !ingredientsRequest && ( <h1>Произошла ошибка, попробуйте позже...</h1> )}\r\n            {!ingredientsFailed && !ingredientsRequest && ingredients.length > 0 && (\r\n                <div className={style.construct}>\r\n                    <h1 className=\"text text_type_main-large mt-10\">Соберите бургер</h1>\r\n                    <div style={{ display: 'flex' }} className='mt-5'>\r\n                        <a className={style.link} href=\"#bun\">\r\n                            <Tab value=\"bun\" active={current === 'bun'} onClick={handleTabClick}>Булка</Tab>\r\n                        </a>\r\n                        <a className={style.link} href=\"#sauce\">\r\n                            <Tab value=\"sauce\" active={current === 'sauce'} onClick={handleTabClick}>Соусы</Tab>\r\n                        </a>\r\n                        <a className={style.link} href=\"#main\">\r\n                            <Tab value=\"main\" active={current === 'main'} onClick={handleTabClick}>Начинки</Tab>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"mt-10\">\r\n                        <div className={style.products} onScroll={handleScroll} ref={scrollRef}>\r\n                            <h3 className=\"text text_type_main-medium\" ref={bunsRef} id=\"bun\">Булки</h3>\r\n                            <div className={style.products__cont}>\r\n                                {ingredients.filter((item: TBurgerIngredientProps) => item.type === 'bun').map((item: TBurgerIngredientProps) => <BurgerIngrediensDetail {...item} key={item._id} />)}\r\n                            </div>\r\n                            <h3 className=\"text text_type_main-medium\" ref={saucesRef} id=\"sauce\">Соусы</h3>\r\n                            <div className={style.products__cont}>\r\n                                {ingredients.filter((item: TBurgerIngredientProps) => item.type === 'sauce').map((item: TBurgerIngredientProps) => <BurgerIngrediensDetail {...item} key={item._id} />)}\r\n                            </div>\r\n                            <h3 className=\"text text_type_main-medium\" ref={mainsRef} id=\"main\">Начинки</h3>\r\n                            <div className={style.products__cont}>\r\n                                {ingredients.filter((item: TBurgerIngredientProps) => item.type === 'main').map((item: TBurgerIngredientProps) => <BurgerIngrediensDetail  {...item} key={item._id} />)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import BurgerConstructor from '../../components/burger-constructor/burger-constructor';\r\nimport BurgerIngredients from '../../components/burger-ingredients/burger-ingredients';\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <>               \r\n            <BurgerIngredients />                        \r\n            <BurgerConstructor />                 \r\n        </>\r\n    );\r\n}\r\n\r\n","import { Link } from 'react-router-dom';\r\nimport styles from './not-found.module.css';\r\n\r\nexport default function NotFound404() {\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>Ошибка 404</h1>\r\n      <div className=\"text text_type_main-default mb-4\">  \r\n        <p>Кажется что-то пошло не так! Страница, которую вы запрашиваете, не существует. Возможно она</p>\r\n        <p>устарела, была удалена, или был введен неверный адрес в адресной строке</p>          \r\n        <br/><br/> \r\n        <Link to=\"/\" className=\"text text_color_accent\"> Перейти на главную</Link>\r\n      </div>  \r\n    </div>\r\n  );\r\n}\r\n","import { useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, useHistory, Redirect, useLocation } from 'react-router-dom';\r\nimport styles from './login.module.css';\r\nimport { Input, Button, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { postLogin } from \"../../../services/funcs\";\r\nimport { useDispatch, useSelector } from '../../../services/types';\r\n\r\nexport default function LoginPage() {\r\n    const history = useHistory();\r\n    const location = useLocation<{ from: Location }>();    \r\n    const dispatch = useDispatch();\r\n\r\n    const [form, setValue] = useState<{ email: string; password: string }>({ email: '', password: '' });\r\n    const { isAuth } = useSelector((state) => state.usersData);\r\n    let { from } = location.state || {from: {pathname: '/'}}\r\n\r\n    function handleChange(e: ChangeEvent<HTMLInputElement>) {\r\n        setValue({ ...form, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    function handleSubmit(e: FormEvent) {\r\n        e.preventDefault();\r\n        dispatch(postLogin({ email: form.email, password: form.password }, history, from)) \r\n    }\r\n\r\n    if (isAuth) {\r\n        return (<Redirect to={{pathname: '/'}} />)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.container}>\r\n                <form className={styles.form} onSubmit={handleSubmit}>\r\n                    <h1 className={`${styles.title} text text_type_main-medium`}>Вход</h1>\r\n                    <div className={`${styles.box} mt-6 mb-6`}>\r\n                        <Input\r\n                            type={'email'}\r\n                            placeholder={'E-mail'}\r\n                            onChange={handleChange}\r\n                            name={'email'}\r\n                            errorText={'Ошибка'}\r\n                            value={form.email} \r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.box} mb-6`}>\r\n                        <PasswordInput\r\n                            //type={'password'}\r\n                            //placeholder='Пароль'\r\n                            onChange={handleChange}\r\n                            //icon={'ShowIcon'}\r\n                            name={'password'}\r\n                            //error={false}                            \r\n                            //errorText={'Ошибка'}\r\n                            size={\"default\"}\r\n                            value={form.password}                             \r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.box} mb-20`}>\r\n                        <Button type=\"primary\" size=\"medium\">Войти</Button>\r\n                    </div>\r\n                </form>    \r\n                <div className={styles.link}>\r\n                    <p className=\"text text_type_main-default text_color_inactive mb-4\"> Вы — новый пользователь? <Link \r\n                        to=\"/register\" className=\"text text_color_accent\">Зарегистрироваться</Link>\r\n                    </p>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">Забыли пароль? <Link\r\n                        to={\"/forgot-password\"} className=\"text text_color_accent\">Восстановить пароль</Link>\r\n                    </p>          \r\n                </div>\r\n            </div>\r\n        </div>            \r\n    );\r\n}","import { useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport styles from './register.module.css';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { postRegister } from \"../../../services/funcs\";\r\nimport { useDispatch, useSelector } from '../../../services/types';\r\n\r\nexport default function RegisterPage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { isAuth } = useSelector((state) => state.usersData);\r\n    \r\n    const [form, setValue] = useState<{ email: string; password: string; name: string }>({ email: '', password: '', name: '' })\r\n    function handleChange(e: ChangeEvent<HTMLInputElement>) {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n    function handleSubmit(e: FormEvent) {\r\n        e.preventDefault();\r\n        dispatch(postRegister(form, history))\r\n    }\r\n    if (isAuth) {\r\n        return (<Redirect to={{pathname: '/'}}/>)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.container}>\r\n                <form className={styles.form} onSubmit={handleSubmit}>\r\n                    <h1 className={`${styles.title} text text_type_main-medium`}>Регистрация</h1>\r\n                    <div className={`${styles.box} mt-6 mb-6`}>\r\n                        <Input\r\n                            type={'text'}\r\n                            placeholder={'Имя'}\r\n                            onChange={handleChange}\r\n                            name={'name'}\r\n                            errorText={'Ошибка'}\r\n                            value={form.name}\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.box} mb-6`}>\r\n                        <Input\r\n                            type={'email'}\r\n                            placeholder={'E-mail'}\r\n                            onChange={handleChange}\r\n                            name={'email'}\r\n                            errorText={'Ошибка'}\r\n                            value={form.email}\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.box} mb-6`}>\r\n                        <PasswordInput\r\n                            //type={'password'}\r\n                            //placeholder={'Введите новый пароль'}\r\n                            onChange={handleChange}\r\n                            //icon={'ShowIcon'}\r\n                            name={'password'}\r\n                            //error={false}\r\n                            //errorText={'Ошибка'}\r\n                            value={form.password}                              \r\n                        />                                             \r\n                    </div>\r\n                    <div className={`${styles.box} mb-20`}>\r\n                        <Button type=\"primary\" size=\"medium\">Зарегистрироваться</Button>\r\n                    </div>\r\n                    <div className={styles.link}>                \r\n                        <p className=\"text text_type_main-default text_color_inactive mb-4\">Уже зарегистрированы? <Link \r\n                            to=\"/login\" className=\"text text_color_accent\">Войти</Link>\r\n                        </p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport styles from './forgot-password.module.css';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { postForgotPassword } from \"../../../services/funcs\";\r\nimport {\r\n    SET_WAS_ON_FORGOT_PAGE\r\n  } from '../../../services/constants';\r\nimport { useDispatch, useSelector } from '../../../services/types';\r\n\r\nexport default function ForgotPasswordPage() {\r\n    const [value, setValue] = useState<string>('')\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();    \r\n    const { isAuth } = useSelector((state) => state.usersData);\r\n\r\n    function handleChange(e: ChangeEvent<HTMLInputElement>) {\r\n        setValue(e.target.value);\r\n    } \r\n    function handleSubmit(e: FormEvent) {\r\n        e.preventDefault();\r\n        dispatch({ type: SET_WAS_ON_FORGOT_PAGE })\r\n        dispatch(postForgotPassword(value, history));\r\n    }\r\n    if (isAuth) {\r\n        return (<Redirect to={{pathname: '/'}}/>)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.container}>\r\n                <form className={styles.form} onSubmit={handleSubmit}>\r\n                    <h1 className={`${styles.title} text text_type_main-medium`}>Восстановление пароля</h1>\r\n                    <div className={`${styles.box} mt-6 mb-6`}>\r\n                        <Input\r\n                            type={'email'}\r\n                            placeholder={'Укажите e-mail'}\r\n                            onChange={handleChange}\r\n                            name={'email'}\r\n                            errorText={'Ошибка'}\r\n                            value={value}\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.box} mb-20`}>\r\n                        <Button type=\"primary\" size=\"medium\">Восстановить</Button>\r\n                    </div>\r\n                    <div className={styles.link}>                \r\n                        <p className=\"text text_type_main-default text_color_inactive mb-4\">Вспомнили пароль? <Link \r\n                            to=\"/login\" className=\"text text_color_accent\">Войти</Link>\r\n                        </p>\r\n                    </div>    \r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom';\r\nimport styles from './reset-password.module.css';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { postResetPassword } from \"../../../services/funcs\";\r\nimport {\r\n    DELETE_WAS_ON_FORGOT_PAGE\r\n  } from '../../../services/constants';\r\nimport { useDispatch, useSelector } from '../../../services/types';\r\n\r\nexport default function ResetPasswordPage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { wasOnForgotPass, isAuth } = useSelector((state) => state.usersData);\r\n    const [form, setValue] = useState<{ password: string; token: string }>({ password: \"\", token: \"\" })\r\n\r\n    function handleChange(e: ChangeEvent<HTMLInputElement>) {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n    function handleSubmit(e: FormEvent) {\r\n        e.preventDefault();\r\n        dispatch(postResetPassword(form, history));\r\n        dispatch({type: DELETE_WAS_ON_FORGOT_PAGE})\r\n    }\r\n\r\n    if (isAuth) {\r\n        return (<Redirect to={{pathname: '/'}} />)\r\n    }\r\n    if (!wasOnForgotPass) {\r\n        return (<Redirect to={'/forgot-password'} />)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.container}>\r\n                <form className={styles.form} onSubmit={handleSubmit}>\r\n                    <h1 className={`${styles.title} text text_type_main-medium`}>Восстановление пароля</h1>\r\n                    <div className={`${styles.box} mt-6 mb-6`}>\r\n                        <PasswordInput\r\n                            //type={'password'}\r\n                            //placeholder={'Введите новый пароль'}\r\n                            onChange={handleChange}\r\n                            //icon={'ShowIcon'}\r\n                            name={'password'}\r\n                            //error={false}\r\n                            //errorText={'Ошибка'}\r\n                            value={form.password}\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.box} mb-6`}>\r\n                        <Input\r\n                            type={'text'}\r\n                            placeholder={'Введите код из письма'}\r\n                            onChange={handleChange}\r\n                            name={'token'}\r\n                            errorText={'Ошибка'}\r\n                            value={form.token}\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.box} mb-20`}>\r\n                        <Button type=\"primary\" size=\"medium\">Сохранить</Button>\r\n                    </div>\r\n                    <div className={styles.link}>                \r\n                        <p className=\"text text_type_main-default text_color_inactive mb-4\">Вспомнили пароль? <Link \r\n                            to=\"/login\" className=\"text text_color_accent\">Войти</Link>\r\n                        </p>\r\n                    </div>                    \r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useEffect, useState, useRef, FormEvent, ChangeEvent, SyntheticEvent, RefObject, FocusEvent, MouseEvent } from \"react\";\r\nimport styles from \"./profile-options.module.css\";\r\nimport { Button, EmailInput, Input } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { getUserInfo, postChangeUserInfo } from \"../../services/funcs\";\r\nimport { TUserData, useDispatch, useSelector } from '../../services/types';\r\n\r\nexport default function ProfileOptions() {\r\n    const { user } = useSelector((state) => state.usersData);\r\n    const [isInput, setIsInput] = useState<boolean>(false);\r\n    const [form, setValue] = useState<TUserData>({ name: \"\", email: \"\", password: \"\" })\r\n    const dispatch = useDispatch();\r\n    const nameRef = useRef<HTMLInputElement>(null);\r\n    const passRef = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserInfo());\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        setValue({ ...form, email: user.email, name: user.name }) \r\n    }, [user])  // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    function handleChange(e: ChangeEvent<HTMLInputElement>): void {\r\n        setValue({ ...form, [e.target.name]: e.target.value })\r\n        setIsInput(true);\r\n    }\r\n    function handleCancel(e: SyntheticEvent): void { \r\n        e.preventDefault(); \r\n        setValue({ email: user.email, name: user.name, password: \"\" })\r\n        setIsInput(false);\r\n    }\r\n    function handleSubmit(e: FormEvent): void {\r\n        e.preventDefault();\r\n        dispatch(postChangeUserInfo(form));\r\n        setIsInput(false);\r\n        setValue({...form, password: ''});\r\n    }\r\n    function handleIconClick(e: MouseEvent, ref: RefObject<any>): void {\r\n        e.preventDefault();\r\n        ref.current.removeAttribute('disabled');\r\n        ref.current.classList.remove('input__textfield-disabled')\r\n        ref.current.focus();\r\n    }   \r\n    function handleBlur(ref: RefObject<any>, e?: FocusEvent): void {\r\n        e?.preventDefault();\r\n        ref.current.setAttribute('disabled', true);\r\n        ref.current.classList.add('input__textfield-disabled');\r\n    }\r\n\r\n    return (\r\n        <div className={`${styles.text} mt-30`}>\r\n            <form onSubmit={handleSubmit} className={`${styles.form}`}>\r\n                <div className=\"form__item mb-6\">\r\n                    <Input\r\n                        type={\"text\"}\r\n                        placeholder=\"Имя\"\r\n                        onChange={handleChange}\r\n                        icon={\"EditIcon\"}\r\n                        name={\"name\"}\r\n                        error={false}\r\n                        errorText={'Ошибка'}                                \r\n                        size={\"default\"}                       \r\n                        onBlur={e => handleBlur(nameRef, e)}\r\n                        onIconClick={e => handleIconClick(e, nameRef)}\r\n                        disabled={true}\r\n                        ref={nameRef}     \r\n                        value={form.name}                       \r\n                    />\r\n                </div>\r\n                <div className=\"form__item mb-6\">\r\n                    <EmailInput \r\n                        //type={\"email\"}\r\n                        onChange={handleChange} \r\n                        //icon={\"EditIcon\"}\r\n                        name={'email'} \r\n                        //errorText={'Ошибка'}                                \r\n                        size={\"default\"}\r\n                        value={form.email}\r\n                    />\r\n                </div>\r\n                <div className=\"form__item mb-6\">\r\n                    <Input\r\n                        type={\"text\"}\r\n                        placeholder=\"Пароль\"\r\n                        onChange={handleChange}\r\n                        icon={\"EditIcon\"}\r\n                        name={\"password\"}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={\"default\"}\r\n                        onBlur={e => handleBlur(passRef, e)}\r\n                        onIconClick={e => handleIconClick(e, passRef)}\r\n                        disabled={true}\r\n                        ref={passRef}\r\n                        value={form.password}                           \r\n                    />\r\n                </div>\r\n                {isInput && (\r\n                <div className={`${styles.form__buttons} mb-20`}>\r\n                    <Button type={\"primary\"} size=\"medium\">Сохранить</Button>\r\n                    <Button type={\"secondary\"} size=\"medium\" onClick={handleCancel}>Отмена</Button>\r\n                </div>\r\n                )}\r\n            </form>\r\n        </div>\r\n    )\r\n}","import { Link, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport feedStyles from \"../../pages/feed/feed.module.css\";\r\nimport burgerConstructorStyle from \"../burger-constructor/burger-constructor.module.css\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { getDate } from \"../../utils/funcs\";\r\nimport { TLocationState, TFeedItemProps } from \"../../utils/prop-types\";\r\nimport { useSelector } from '../../services/types';\r\n\r\nexport default function FeedItem(props: TFeedItemProps) {\r\n    const location = useLocation<TLocationState>();\r\n    const { url } = useRouteMatch();\r\n    const { ingredients } = useSelector((state) => state.burgerIngredients);\r\n    const _id: number = props.data.number;\r\n    const uniqueOrderIngredients = Array.from(new Set(props.data.ingredients));\r\n\r\n    const orderIngredients = uniqueOrderIngredients.map((ingredient) => {\r\n        return ingredients.find((item) => item._id === ingredient);\r\n    });\r\n\r\n    const price = orderIngredients.reduce((acc, curr) => {\r\n        if (curr && curr.type === 'bun') {\r\n            acc += curr.price * 2;\r\n        } else if (curr) {\r\n            acc += curr.price;\r\n        }\r\n        return acc;\r\n    }, 0);\r\n\r\n    return (\r\n        <Link to={{ pathname: `${url}/${_id}`, state: { background: location } }}\r\n            className={`${feedStyles.feed} mt-4`}>\r\n            <div className={`${feedStyles.feed__top}`}>\r\n                <p className={`text text_type_digits-default`}>#{props.data.number}</p>\r\n                <p className={`text text_type_main-default text_color_inactive`}>{getDate(props.data.createdAt)}</p>\r\n            </div>\r\n            <div className=\"feed__center\">\r\n                <h3 className={`text text_type_digits-default mt-6 mb-6`}>{props.data.name}</h3>\r\n            </div>\r\n            <div className={`${feedStyles.feed__bottom}`}>\r\n                <div className={`${feedStyles.ingredients}`} style={{ position: \"relative\" }}>\r\n                    {orderIngredients.slice(0, 5).map((item, index) => (<img src={item?.image_mobile} alt=\"\" className={`${feedStyles.ingredient}`} key={index} style={{ zIndex: 5 - index }} />))}\r\n                    {orderIngredients.length > 4 && (<span className={`${feedStyles.more} text text_type_main-default`}>+{orderIngredients.length - 4}</span>)}\r\n                </div>\r\n                <div className={`${burgerConstructorStyle.total__price} mr-10`}>\r\n                    <span className=\"text text_type_digits-medium\">{price}</span>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}","import {\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_MESSAGE\r\n  } from '../constants';\r\nimport { TFeedItem } from \"../../services/types\";\r\n\r\nexport interface IWsConnectionStartAction {\r\n    readonly type: typeof WS_CONNECTION_START;\r\n    readonly payload: string     \r\n}\r\nexport interface IWsConnectionSuccessAction {\r\n    readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\nexport interface IWsConnectionErrorAction {\r\n    readonly type: typeof WS_CONNECTION_ERROR;\r\n}\r\nexport interface IWsConnectionClosedAction {\r\n    readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\nexport interface IWsGetMessageAction {\r\n    readonly type: typeof WS_GET_MESSAGE,\r\n    readonly payload: {\r\n        orders: TFeedItem[],\r\n        total: number,\r\n        totalToday: number\r\n      }\r\n} \r\n\r\nexport type TWsActions =\r\n  IWsConnectionStartAction |\r\n  IWsConnectionSuccessAction |\r\n  IWsConnectionErrorAction |\r\n  IWsConnectionClosedAction |\r\n  IWsGetMessageAction;\r\n\r\nexport const wsActions = {\r\n    wsInit: WS_CONNECTION_START,\r\n    onOpen: WS_CONNECTION_SUCCESS,\r\n    onClose: WS_CONNECTION_CLOSED,\r\n    onError: WS_CONNECTION_ERROR,\r\n    onMessage: WS_GET_MESSAGE\r\n};\r\n\r\nexport function WsConnectionStartAction(url: string): IWsConnectionStartAction {\r\n    return ({\r\n        type: WS_CONNECTION_START,\r\n        payload: url\r\n    });\r\n}  \r\n\r\nexport function WsConnectionSuccessAction(): IWsConnectionSuccessAction {\r\n    return ({\r\n        type: WS_CONNECTION_SUCCESS\r\n    });\r\n}  \r\n\r\nexport function WsConnectionErrorAction(): IWsConnectionErrorAction {\r\n    return ({\r\n        type: WS_CONNECTION_ERROR\r\n    });\r\n}  \r\n\r\nexport function WsConnectionClosedAction(): IWsConnectionClosedAction {\r\n    return ({\r\n        type: WS_CONNECTION_CLOSED\r\n    });\r\n}  \r\n\r\nexport function WsGetMessageAction(message: { orders: TFeedItem[], total: number,totalToday: number }): IWsGetMessageAction {\r\n    return ({\r\n        type: WS_GET_MESSAGE,\r\n        payload: message\r\n    });\r\n}  ","import { useEffect } from 'react';\r\nimport style from \"./profile-orders.module.css\";\r\nimport FeedItem from \"../feed-item/feed-item\";\r\nimport { WsConnectionStartAction, WsConnectionClosedAction } from \"../../services/actions/ws\";\r\nimport { wssURL } from \"../../utils/constants\";\r\nimport { getCookie } from \"../../utils/funcs\";\r\nimport { useDispatch, useSelector } from '../../services/types';\r\n\r\nexport default function ProfileOrders() {\r\n    const { orders, wsConnected, wsError } = useSelector((state) => state.wsData);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const token = getCookie('token')?.replace('Bearer ', '');\r\n        dispatch(WsConnectionStartAction(`${wssURL}?token=${token}`));\r\n        return () => {\r\n            dispatch(WsConnectionClosedAction());\r\n        };\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            {wsError && (<h1 style={{textAlign: \"center\"}}>Произошла ошибка, попробуйте позже...</h1>)}\r\n            {!wsError && wsConnected && orders.length === 0 && <h1 style={{ textAlign: \"center\" }}>Идет загрузка...</h1>}\r\n            {(!wsError && wsConnected && orders && orders.length !== 0) ? (\r\n                <div className={`${style.orders} mt-8 custom-scroll`}>\r\n                    {orders.map((item, index) => <FeedItem data={item} key={index} />)}\r\n                </div>\r\n            ): null}\r\n        </>\r\n    );\r\n}","import { Switch, Route, NavLink, useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport styles from \"./profile.module.css\";\r\nimport { postLogout } from \"../../services/funcs\";\r\nimport { useDispatch } from '../../services/types';\r\nimport { TLocationState } from '../../utils/prop-types';\r\nimport ProfileOptions from '../../components/profile-options/profile-options'\r\nimport ProfileOrders from '../../components/profile-orders/profile-orders'\r\n\r\nexport default function ProfilePage() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation<TLocationState>();\r\n    const background = (history.action === 'PUSH' || history.action === 'REPLACE') && location.state && location.state.background; \r\n    const isProfile = !!useRouteMatch({ path: '/profile', exact: true });\r\n    const isOrders = !!useRouteMatch({ path: '/profile/orders', exact: true });\r\n\r\n    function handleClick() {\r\n        dispatch(postLogout(history));\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`${styles.container} mt-30 `}>\r\n                <div className={styles.cont}>\r\n                    <ul className={`${styles.menu} mr-15`}>\r\n                        <li className={`${styles.menuItem} text text_type_main-medium text_color_inactive`}>\r\n                            <NavLink className={`${styles.nav__link} ${isProfile ? styles.nav__linkActive : ''}`}\r\n                                exact to={`/profile`}>Профиль\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={`${styles.menuItem} text text_type_main-medium text_color_inactive`}>\r\n                            <NavLink className={`${styles.nav__link} ${isOrders ? styles.nav__linkActive : ''}`}\r\n                                exact to={`/profile/orders`}>История заказов\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className={`${styles.menuItem} text text_type_main-medium text_color_inactive`} onClick={handleClick}>\r\n                            <NavLink className={\"text_color_inactive\"} activeClassName={\"text_color_primary\"}\r\n                                exact to={`/login`}>Выход\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <p className={`${styles.menuSubtitle} mt-20 text text_type_main-default text_color_inactive`}>\r\n                        {isOrders ?\r\n                            ('В этом разделе вы можете просмотреть свою историю заказов')\r\n                            :\r\n                            ('В этом разделе вы можете изменить свои персональные данные')                      \r\n                        }\r\n                    </p>\r\n                </div> \r\n            </div>         \r\n            <Switch location={background || location}>\r\n                <Route exact path={`/profile`} component={ ProfileOptions } />\r\n                <Route exact path={`/profile/orders`} component={ ProfileOrders } />        \r\n            </Switch>                    \r\n        </>    \r\n    )\r\n}","import { useEffect } from 'react';\r\nimport style from './feed.module.css';\r\nimport FeedItem from \"../../components/feed-item/feed-item\";\r\nimport {  WsConnectionStartAction, WsConnectionClosedAction } from \"../../services/actions/ws\";\r\nimport { wssURL } from \"../../utils/constants\";\r\nimport { useDispatch, useSelector } from '../../services/types';\r\n\r\nexport default function FeedPage () {\r\n    const dispatch = useDispatch();\r\n    const { orders, total, totalToday, wsConnected, wsError } = useSelector((state) => state.wsData);\r\n    useEffect(() => {       \r\n        dispatch(WsConnectionStartAction(`${wssURL}/all`));   \r\n        return () => {\r\n        dispatch(WsConnectionClosedAction());\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {wsError && <h1 style={{textAlign: \"center\"}}>Произошла ошибка, попробуйте позже...</h1>}\r\n            {!wsError && wsConnected && orders && orders.length === 0 && (<h1 style={{ textAlign: \"center\" }}>Идет загрузка...</h1>)}\r\n            {(total && totalToday && orders.length !== 0) ? (\r\n                <>\r\n                    <div className={style.feeds__container}>\r\n                    <h1 className=\"text text_type_main-large mt-10 text_colo\">Лента заказов</h1>\r\n                        <div className={`${style.feeds} mt-5 custom-scroll`}>\r\n                            {orders.map((item, index) => <FeedItem data={item} key={index} />)}\r\n                        </div>\r\n                    </div>\r\n                    <div className={`${style.feed__info}`}>\r\n                        <div className={style.feed__board}>\r\n                            <div className={style.feed__boardLeft}>\r\n                                <p className={`text text_type_main-medium mb-6`}>Готовы</p>\r\n                                <ul className={style.feed__completed}>\r\n                                    {orders\r\n                                    .filter((item) => item.status === 'done')\r\n                                    .map((item, index) => (<li className={`text text_type_digits-small text_color_success`} key={index}>{item.number}</li>))\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                            <div className={style.feed__boardRight}>\r\n                                <p className={`text text_type_main-medium mb-6`}>В работе:</p>\r\n                                <ul className={style.feed__inProgress}>\r\n                                    {orders\r\n                                    .filter((item) => item.status === 'pending')\r\n                                    .map((item, index) => (<li className={`text text_type_digits-small text_color_success`} key={index}>{item.number}</li>))\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"feed__allCount mt-15\">\r\n                            <p className={`text text_type_main-default`}>Выполнено за все время:</p>\r\n                            <p className={`text text_type_digits-large text_color_primary ${style.feed__mainTitle}`}>{total}</p>\r\n                        </div>\r\n                        <div className=\"feed__todayCount mt-15\">\r\n                            <p className={`text text_type_main-default`}>Выполнено за сегодня:</p>\r\n                            <p className={`text text_type_digits-large  text_color_primary ${style.feed__mainTitle}`}>{totalToday}</p>\r\n                        </div>\r\n                    </div>     \r\n                </>\r\n            ) : null}\r\n        </>\r\n    );\r\n}","import style from './modal-overlay.module.css';\r\nimport { TModalOverlayProps } from '../../utils/prop-types';\r\n\r\nexport default function ModalOverlay (props: TModalOverlayProps) {\r\n  return (\r\n    <section className={`${style.overlay}`} onClick={props.onClose} >\r\n      { props.children }\r\n    </section >\r\n  )\r\n}","import { useEffect } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport style from './modal.module.css';\r\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\nimport { TModalProps } from '../../utils/prop-types';\r\n\r\nexport default function Modal (props: TModalProps) {  \r\n    const history = useHistory();\r\n    function closeModal () {\r\n        history.goBack();\r\n    }    \r\n    function handleCloseModal(e: KeyboardEvent) {     \r\n        if (e.keyCode === 27) {\r\n            closeModal();\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.addEventListener('keyup', handleCloseModal);\r\n        return () => {\r\n            document.removeEventListener('keyup', handleCloseModal);\r\n        } \r\n    })      \r\n    return ReactDOM.createPortal(\r\n        <>\r\n            <ModalOverlay onClose={closeModal} />   \r\n            <div className={`${style.modal} pt-10 pr-10 pl-10 pb-15`}>\r\n                <div className={style.header}>\r\n                    <h3 className={`${style.title} text text_type_main-large`}>{props.title}</h3>\r\n                    <div className={style.close} onClick={closeModal} id=\"closeModal\">\r\n                        <CloseIcon type={\"primary\"} />\r\n                    </div> \r\n                </div>\r\n                <div>{props.children}</div>\r\n            </div>\r\n        </>,\r\n        document.getElementById('modal-root')!\r\n    )\r\n};","import { useParams, useLocation, useHistory } from \"react-router-dom\";\r\nimport style from './ingredient-details.module.css';\r\nimport { TIngredientDetailsProps } from \"../../utils/prop-types\";\r\nimport { useSelector } from '../../services/types';\r\nimport { TLocationState } from '../../utils/prop-types';\r\n\r\nexport default function IngredientDetails() {\r\n    const { ingredients } = useSelector((state) => state.burgerIngredients);\r\n    const { id } = useParams<TIngredientDetailsProps>();\r\n    const ingredient = ingredients.find((item) => item._id === id);\r\n    const location = useLocation<TLocationState>();\r\n    const history = useHistory();\r\n    const background = (history.action === 'PUSH' || history.action === 'REPLACE') && location.state && location.state.background;\r\n    return (  \r\n        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', margin: 'auto'}}>                \r\n            <h1 className={`${style.title} ${!background && 'mt-15'} text text_color_primary text_type_main-large`} id=\"title\">Детали ингредиента</h1>                       \r\n            {ingredient && (\r\n                <div className={style.body}>\r\n                    <img src={ingredient?.image_large} alt={ingredient?.name} className=\"mb-4\" />\r\n                    <p className={`${style.title} text text_type_main-medium mb-8`} id=\"ingredientName\">{ingredient?.name}</p>        \r\n                    <div className={`${style.card}`}>\r\n                        <div className={`${style.text} mr-5`}>\r\n                            <p className=\"text text_type_main-default\">Калории, ккал</p>\r\n                            <p className=\"text text_type_digits-default\">{ingredient?.calories}</p>\r\n                        </div>\r\n                        <div className={`${style.text} mr-5`}>\r\n                            <p className=\"text text_type_main-default\">Белки, г</p>\r\n                            <p className=\"text text_type_digits-default\">{ingredient?.proteins}</p>\r\n                        </div>\r\n                        <div className={`${style.text} mr-5`}>\r\n                            <p className=\"text text_type_main-default\">Жиры, г</p>\r\n                            <p className=\"text text_type_digits-default\">{ingredient?.fat}</p>\r\n                        </div>\r\n                        <div className={`${style.text} mr-5`}>\r\n                            <p className=\"text text_type_main-default\">Углеводы, г</p>\r\n                            <p className=\"text text_type_digits-default\">{ingredient?.carbohydrates}</p>\r\n                        </div>\r\n                    </div>                    \r\n                </div>       \r\n            )}  \r\n        </div>        \r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/image.7341dd32.svg\";","import { useEffect } from 'react';\r\nimport style from './order-details.module.css';\r\nimport imgDone from '../../images/image.svg';\r\nimport { useDispatch, useSelector } from '../../services/types';\r\nimport { ClearConstructorAction } from '../../services/actions/burger-constructor'\r\n\r\nexport default function OrderDetails() {\r\n  const { orderNumber } = useSelector((state) => state.ordersData)\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (orderNumber) {\r\n        dispatch(ClearConstructorAction())\r\n      }\r\n  }, [orderNumber, dispatch])\r\n\r\n  return (\r\n    <>\r\n      {!orderNumber && (<h1>Идет загрузка...</h1>)}\r\n      {orderNumber &&\r\n        <div className={`${style.order} pb-15`}>\r\n          <h3 className={`${style.title} text text_primary_ligth text_type_digits-large`} id=\"orderNumber\">{orderNumber}</h3>\r\n          <p className=\"text text_type_main-medium mt-8\" id=\"title\">идентификатор заказа</p>\r\n          <div className={`${style.status} mt-15 mb-15`}> \r\n            <img src={imgDone} alt=\"готово\" />\r\n          </div>     \r\n          <p className=\"text text_type_main-default\">Ваш заказ начали готовить</p>\r\n          <p className={`${style.subtitle} text text_type_main-default mt-2`}>Дождитесь готовности на орбитальной станции</p>\r\n        </div>\r\n      }\r\n    </> \r\n  );\r\n};","import { useEffect, useMemo } from 'react';\r\nimport { useParams, useHistory, useLocation } from \"react-router-dom\"\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport style from './feed-details.module.css';\r\nimport { getOrder } from \"../../services/funcs\";\r\nimport { getDate } from \"../../utils/funcs\";\r\nimport { useDispatch, useSelector, TFeedItem } from '../../services/types';\r\nimport { TLocationState } from \"../../utils/prop-types\";\r\n\r\nexport default function FeedDetail() {\r\n    const { id }: { id: string; } = useParams();\r\n    const dispatch = useDispatch();\r\n    const location = useLocation<TLocationState>();\r\n    const history = useHistory();\r\n    const background = (history.action === 'PUSH' || history.action === 'REPLACE') && location.state && location.state.background;    \r\n    const { orders } = useSelector((state) => state.wsData);\r\n    const { order } = useSelector((state) => state.ordersData);\r\n    const { ingredients } = useSelector((state) => state.burgerIngredients);\r\n    let currOrder: TFeedItem | undefined | null;\r\n    useEffect(() => {\r\n        if (orders.length === 0) {\r\n            dispatch(getOrder(id));\r\n        }\r\n    }, [dispatch, orders, id]);\r\n    if (orders.length !== 0) {\r\n        currOrder = orders.find((item) => item.number === Number(id));\r\n    } else {\r\n        currOrder = order && order.find((item) => item.number === Number(id));\r\n    }\r\n\r\n    const orderIngredients = useMemo(() => {\r\n        return Array.from(new Set(currOrder?.ingredients)).map((ingredient) => {\r\n            return ingredients.find((item) => item._id === ingredient);\r\n        });;\r\n    }, [currOrder, ingredients]);\r\n\r\n    const price = useMemo(() => {\r\n        return orderIngredients.reduce((acc, item) => {\r\n            if (item && item.type === 'bun') {\r\n                acc += item && item.price * 2;\r\n            } else if (item) {\r\n                acc += item && item.price;\r\n            }\r\n            return acc;\r\n        }, 0);\r\n    }, [orderIngredients]);\r\n\r\n    return (\r\n        <>\r\n            {orderIngredients.length === 0 && (<h1>Идет загрузка...</h1>)}\r\n            {currOrder && orderIngredients.length > 0 && (\r\n                <div className={`${style.feed}`}>\r\n                    <p className={`text text_type_digits-default ${style.title} ${!background && 'mt-15'}`}>#{currOrder?.number}</p>\r\n                    <p className={`text text_type_main-medium  mt-10`}>{currOrder?.name}</p>\r\n                    <p className={`text text_type_main-default text_color_success mt-2`}>{currOrder?.status === 'done' ? 'Выполнен' : 'В работе'}</p>\r\n                    <p className={`text text_type_main-medium mt-15 mb-6`}>Состав:</p>\r\n                    <div className={`${style.ingredients} custom-scroll`}>\r\n                        {orderIngredients && orderIngredients.map((item, index) => {\r\n                            return (\r\n                                <div key={index} className={`${style.ingredient}`}>\r\n                                    <div className={`${style.ingredient__info}`}>\r\n                                        <img src={item?.image_mobile} alt=\"\"\r\n                                            className={`${style.ingredient__image}`} />\r\n                                        <p className=\"text text_type_main-default ml-4\">{item?.name}</p>\r\n                                    </div>\r\n                                    <div className={`${style.ingredient__price}`}>\r\n                                        <span className={`text text_type_digits-default mr-2`}>{item?.type === 'bun' ? 2 : 1} x {item?.price}</span>\r\n                                        <CurrencyIcon type=\"primary\" />\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n\r\n                    </div>\r\n                    <div className={`${style.feed__footer}`}>\r\n                        <p className={`text text_type_main-default ml-4 text_color_inactive`}>{getDate(currOrder?.createdAt)}</p>\r\n                        <div className={`total__${style.ingredient__price}`}>\r\n                            <span className={`text text_type_digits-default mr-2`}>{price}</span>\r\n                            <CurrencyIcon type=\"primary\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}","import { useEffect } from 'react';\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\nimport styles from './app.module.css';\nimport AppHeader from '../app-header/app-header';\nimport { HomePage, NotFound404, LoginPage, RegisterPage, ForgotPasswordPage, ResetPasswordPage, ProfilePage, FeedPage} from '../../pages';\nimport { getIngredients } from \"../../services/funcs\";\nimport { ProtectedRoute } from \"../../utils/funcs\";\nimport { TLocationState } from '../../utils/prop-types';\nimport { useDispatch } from '../../services/types';\nimport Modal from \"../modal/modal\";\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\nimport OrderDetails from \"../order-details/order-details\";\nimport FeedDetails from \"../feed-details/feed-details\";\n\nexport default function App() {\n    const location = useLocation<TLocationState>();\n    const history = useHistory();\n    const background = (history.action === 'PUSH' || history.action === 'REPLACE') && location.state && location.state.background;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(getIngredients());\n    }, [dispatch]);  \n\n    return (\n        <div>\n            <AppHeader />\n            <main>\n                <div className={`${styles.container} pl-5 pr-5`}>\n                    <div className={styles.main__container}>                \n                        <Switch location={background || location}>                   \n                            <Route exact path=\"/login\" component={ LoginPage } />          \n                            <Route exact path=\"/register\" component={ RegisterPage } /> \n                            <Route exact path=\"/forgot-password\" component={ ForgotPasswordPage } /> \n                            <Route exact path=\"/reset-password\" component={ ResetPasswordPage } />    \n                            <ProtectedRoute exact path=\"/profile/orders/:id\"><FeedDetails /></ProtectedRoute>                                             \n                            <ProtectedRoute path=\"/profile\"><ProfilePage /></ProtectedRoute>\n                            <Route exact path=\"/ingredients/:id\" component={ IngredientDetails } />\n                            <Route exact path=\"/feed\" component={ FeedPage } />         \n                            <Route exact path=\"/feed/:id\" component={ FeedDetails } />                     \n                            <Route exact path=\"/\" component={ HomePage } />                                          \n                            <Route exact path=\"\" component={ NotFound404 } />                       \n                        </Switch>\n                        {background &&\n                            (<>\n                                <Route path={\"/ingredients/:id\"} children={\n                                    <Modal><IngredientDetails/></Modal>\n                                } />                                \n                                <Route path={\"/sendorder\"} children={ \n                                    <Modal><OrderDetails /></Modal>\n                                } />  \n                                <Route path={\"/feed/:id\"} children={\n                                    <Modal><FeedDetails /></Modal>\n                                } />\n                                <ProtectedRoute path={\"/profile/orders/:id\"} children={\n                                    <Modal><FeedDetails /></Modal>\n                                } />                            \n                            </>)\n                        }                           \n                    </div>                    \n                </div>                \n            </main>       \n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { TBurgerConstructorProps } from '../../utils/prop-types';\r\nimport {\r\n    ADD_INGREDIENT_TO_CONSTRUCTOR,\r\n    ADD_BUN_TO_CONSTRUCTOR,\r\n    REMOVE_INGREDIENT_FROM_CONSTRUCTOR, \r\n    MOVE_INGREDIENT_IN_CONSTRUCTOR, \r\n    CLEAR_CONSTRUCTOR\r\n} from '../constants';\r\nimport { TConstructorActions } from '../actions/burger-constructor';\r\n\r\ntype TInintialState = {\r\n    ingredients: TBurgerConstructorProps[];\r\n    bun: TBurgerConstructorProps | null;\r\n    totalPrice: number;\r\n}\r\n\r\nexport const initialState: TInintialState = {\r\n    ingredients: [],\r\n    bun: null,\r\n    totalPrice: 0\r\n}\r\n\r\nexport function constructorReducer(state = initialState, action: TConstructorActions): TInintialState {\r\n    switch(action.type) {\r\n        case ADD_INGREDIENT_TO_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                ingredients: [...state.ingredients, action.item],\r\n            }\r\n        case ADD_BUN_TO_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                bun: action.item,\r\n            }\r\n        case REMOVE_INGREDIENT_FROM_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                ingredients: [\r\n                    ...state.ingredients.filter((item) => item.uuid !== action.id)\r\n                ],\r\n            }\r\n        case MOVE_INGREDIENT_IN_CONSTRUCTOR:\r\n            let ingredients = [...state.ingredients];\r\n            const dragCard = ingredients[action.dragIndex];\r\n            ingredients.splice(action.dragIndex, 1);\r\n            ingredients.splice(action.hoverIndex, 0, dragCard)\r\n            return {\r\n                ...state,\r\n                ingredients: ingredients\r\n            }\r\n        case CLEAR_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                ingredients: [],\r\n                bun: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { TBurgerIngredientProps } from '../../utils/prop-types';\r\nimport {\r\n    GET_INGREDIENTS_REQUEST, \r\n    GET_INGREDIENTS_SUCCESS, \r\n    GET_INGREDIENTS_FAILED, \r\n    SET_INGREDIENT_TO_MODAL, \r\n    REMOVE_INGREDIENT_FROM_MODAL\r\n  } from '../constants';\r\nimport { TIngredientsActions } from '../actions/burger-ingredients';\r\n\r\ntype TInitialState = {\r\n    ingredients: TBurgerIngredientProps[];\r\n    ingredientsRequest: boolean;\r\n    ingredientsFailed: boolean;\r\n    ingredientDetails: TBurgerIngredientProps | {}\r\n}\r\n\r\nexport const initialState: TInitialState = {\r\n    ingredients: [],\r\n    ingredientsRequest: false,\r\n    ingredientsFailed: false,\r\n    ingredientDetails: {}\r\n};\r\n\r\nexport function burgerIngredientsReducer(state = initialState, action: TIngredientsActions): TInitialState {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS_REQUEST: {\r\n            return { ...state, ingredientsRequest: true };\r\n        }\r\n        case GET_INGREDIENTS_SUCCESS: {\r\n            return { ...state, ingredientsFailed: false, ingredients: action.ingredients, ingredientsRequest: false };\r\n        }\r\n        case GET_INGREDIENTS_FAILED: {\r\n            return { ...state, ingredientsFailed: true, ingredientsRequest: false };\r\n        }\r\n        case SET_INGREDIENT_TO_MODAL: {\r\n            return { ...state, ingredientDetails: action.item }\r\n        }\r\n        case REMOVE_INGREDIENT_FROM_MODAL: {\r\n            return { ...state, ingredientDetails: {} }\r\n        }\r\n        default: return state;\r\n    }\r\n};","import { setCookie, deleteCookie, getCookie } from \"../../utils/funcs\";\r\nimport {\r\n    GET_USER_FAILED,\r\n    GET_USER_INFO,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    SET_IS_AUTH,\r\n    DELETE_IS_AUTH,\r\n    SET_WAS_ON_FORGOT_PAGE, \r\n    DELETE_WAS_ON_FORGOT_PAGE, \r\n    CHANGE_USER_INFO\r\n} from \"../constants\";\r\nimport { TUsersActions } from '../actions/users';\r\n\r\ntype TInitialState = {\r\n    authRequest: boolean;\r\n    authFailed: boolean;\r\n    user: {\r\n        name: string;\r\n        email: string;\r\n    };\r\n    isAuth: boolean;\r\n    wasOnForgotPass: boolean;\r\n}\r\n\r\nexport const initialState: TInitialState = {\r\n    authRequest: false,\r\n    authFailed: false,\r\n    user: {\r\n        name: \"\",\r\n        email: \"\"\r\n    },\r\n    isAuth: Boolean(getCookie('token')),\r\n    wasOnForgotPass: false\r\n}\r\n\r\nexport function usersReducer(state = initialState, action: TUsersActions): TInitialState {\r\n    switch (action.type) {\r\n        case GET_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                authRequest: true\r\n            }\r\n        case GET_USER_FAILED:\r\n            return {\r\n                ...state,\r\n                authFailed: true\r\n            }\r\n        case GET_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                authRequest: false,\r\n                authFailed: false,\r\n                isAuth: true\r\n            }\r\n        case GET_USER_INFO:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case SET_IS_AUTH:\r\n            setCookie('token', action.payload.accessToken);\r\n            localStorage.setItem('refreshToken', action.payload.refreshToken);\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n            }\r\n        case DELETE_IS_AUTH:\r\n            deleteCookie('token');\r\n            localStorage.removeItem('refreshToken');\r\n            return {\r\n                ...state,\r\n                isAuth: false\r\n            }\r\n        case SET_WAS_ON_FORGOT_PAGE:\r\n            return {\r\n                ...state,\r\n                wasOnForgotPass: true\r\n            }\r\n        case DELETE_WAS_ON_FORGOT_PAGE:\r\n            return {\r\n                ...state,\r\n                wasOnForgotPass: false\r\n            }\r\n        case CHANGE_USER_INFO:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_SUCCESS,\r\n    GET_ORDER_FAILED,      \r\n    CLEAR_ORDER,        \r\n    GET_ORDER_NUMBER_REQUEST,\r\n    GET_ORDER_NUMBER_SUCCESS,\r\n    GET_ORDER_NUMBER_FAILED,\r\n    CLEAR_ORDER_NUMBER\r\n} from \"../constants\";\r\nimport { TOrdersActions } from '../actions/orders';\r\nimport { TFeedItem } from \"../types\";\r\n\r\ntype TInitialState = {\r\n    order: TFeedItem[] | null;\r\n    orderRequest: boolean,\r\n    orderFailed: boolean,\r\n    orderNumber: string | null,\r\n    orderNumberRequest: boolean,\r\n    orderNumberFailed: boolean\r\n}\r\n\r\nexport const initialState: TInitialState = {\r\n    order: null,\r\n    orderRequest: false,\r\n    orderFailed: false,\r\n    orderNumber: null,\r\n    orderNumberRequest: false,\r\n    orderNumberFailed: false,\r\n}\r\n\r\nexport function ordersReducer(state = initialState, action: TOrdersActions): TInitialState {\r\n    switch (action.type) {\r\n        case GET_ORDER_FAILED:\r\n            return {\r\n                ...state,\r\n                orderFailed: true\r\n            }\r\n        case GET_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                orderRequest: true\r\n            }\r\n        case GET_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                order: action.payload\r\n            }\r\n        case CLEAR_ORDER:\r\n            return {\r\n                ...state,\r\n                order: null\r\n            }        \r\n        case GET_ORDER_NUMBER_REQUEST:\r\n            return {\r\n                ...state,\r\n                orderRequest: true\r\n            };\r\n        case GET_ORDER_NUMBER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orderNumber: action.payload\r\n            };\r\n        case GET_ORDER_NUMBER_FAILED:\r\n            return {\r\n                ...state,\r\n                orderFailed: true\r\n            };\r\n        case CLEAR_ORDER_NUMBER:\r\n            return {\r\n                ...state,\r\n                orderNumber: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}  ","import {\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_MESSAGE\r\n  } from '../constants';\r\nimport { TWsActions } from '../actions/ws';\r\nimport { TFeedItem } from '../types';\r\n\r\ntype TInitialState = {\r\n    wsConnected: boolean,\r\n    wsError: boolean,\r\n    orders: TFeedItem[],\r\n    total: number,\r\n    totalToday: number\r\n}\r\n  \r\nexport const initialState: TInitialState = {\r\n    wsConnected: false,\r\n    wsError: false,\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0\r\n}\r\n\r\nexport const wsReducer = (state = initialState, action: TWsActions): TInitialState => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_START:\r\n            return {\r\n              ...state,\r\n              wsConnected: false,\r\n              wsError: false\r\n            }        \r\n        case WS_CONNECTION_SUCCESS:\r\n            return {\r\n              ...state,\r\n              wsConnected: true,\r\n              wsError: false\r\n            }\r\n        case WS_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                wsConnected: false,\r\n                wsError: true\r\n            }\r\n        case WS_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                wsConnected: false,\r\n                wsError: false,\r\n                orders: []\r\n            }\r\n        case WS_GET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                orders: action.payload.orders,\r\n                total: action.payload.total,\r\n                totalToday: action.payload.totalToday\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}            ","import { combineReducers } from 'redux';\r\nimport { constructorReducer } from \"./burger-constructor\";\r\nimport { burgerIngredientsReducer } from \"./burger-ingredients\";\r\nimport { usersReducer } from \"./users\";\r\nimport { ordersReducer } from \"./orders\";\r\nimport { wsReducer } from './ws';\r\n\r\nexport const rootReducer = combineReducers({\r\n    burgerIngredients: burgerIngredientsReducer,\r\n    burgerConstructor: constructorReducer,\r\n    usersData: usersReducer,\r\n    ordersData: ordersReducer,\r\n    wsData: wsReducer  \r\n});","import { Middleware, MiddlewareAPI } from \"redux\";\r\nimport { wsActionsType } from \"../types\";\r\n\r\nexport function wsMiddleWare(wsActions: wsActionsType): Middleware {\r\n    return (store: MiddlewareAPI) => {\r\n        let socket: WebSocket | null = null;\r\n\r\n        return next => action => {\r\n            const { dispatch } = store;\r\n            const { type, payload } = action;\r\n            const { wsInit, onOpen, onClose, onError, onMessage } = wsActions;\r\n            if (wsInit.match(type)) {\r\n                socket = new WebSocket(payload);\r\n            }\r\n            if (socket) {\r\n                socket.onopen = () => {\r\n                    dispatch({ type: onOpen });\r\n                };\r\n                socket.onerror = event => {\r\n                    dispatch({ type: onError });\r\n                };\r\n                socket.onmessage = event => {\r\n                    const { data } = event;\r\n                    const parsedData = JSON.parse(data);\r\n                    const { success, ...restParsedData } = parsedData;\r\n\r\n                    dispatch({ type: onMessage, payload: restParsedData });\r\n                };\r\n                socket.onclose = event => {\r\n                    dispatch({ type: onClose });\r\n                };\r\n            }\r\n            next(action);\r\n        };\r\n    };\r\n}","/*import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\nexport default store;*/\r\n\r\nimport { rootReducer } from \"./reducers\";\r\nimport { wsMiddleWare } from \"./middleware/wsMiddleWare\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { wsActions } from \"./actions/ws\";\r\n\r\nconst orderMiddleWare = wsMiddleWare(wsActions)\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => {\r\n    return getDefaultMiddleware().concat(orderMiddleWare)\r\n  }\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport store from './services/store';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DndProvider backend={HTML5Backend}>\n        <Provider store={store}>\n          <Router>\n            <App/>\n          </Router>\n        </Provider>\n    </DndProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__2L_Ur\",\"menu\":\"profile_menu__1W3pq\",\"menuItem\":\"profile_menuItem__yuALK\",\"cont\":\"profile_cont__34flA\",\"menuSubtitle\":\"profile_menuSubtitle__JEbJ1\",\"nav__link\":\"profile_nav__link__1k31F\",\"nav__linkActive\":\"profile_nav__linkActive__2_r3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"register_wrapper__2OAB1\",\"container\":\"register_container__1P427\",\"form\":\"register_form__3KNZu\",\"title\":\"register_title__3tvXb\",\"box\":\"register_box__22pQx\",\"link\":\"register_link__2OWEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"feed-details_body__2oVIv\",\"composition\":\"feed-details_composition__1nxYB\",\"feed\":\"feed-details_feed__3uyuS\",\"title\":\"feed-details_title__1na_-\",\"ingredients\":\"feed-details_ingredients__1pjDg\",\"ingredient\":\"feed-details_ingredient__WEtr4\",\"ingredient__info\":\"feed-details_ingredient__info__1CBff\",\"ingredient__image\":\"feed-details_ingredient__image__3KND1\",\"ingredient__price\":\"feed-details_ingredient__price__M_-mN\",\"feed__footer\":\"feed-details_feed__footer__nV-1u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"construct\":\"burger-ingredients_construct__135iL\",\"tabs\":\"burger-ingredients_tabs__2VYI6\",\"tab\":\"burger-ingredients_tab__1DvqZ\",\"tab__link\":\"burger-ingredients_tab__link__4zg9Q\",\"active\":\"burger-ingredients_active__2c6NK\",\"products\":\"burger-ingredients_products__IoLOW\",\"products__cont\":\"burger-ingredients_products__cont__1IShX\",\"detail__product\":\"burger-ingredients_detail__product__2cst_\",\"detail__image\":\"burger-ingredients_detail__image__2yWWc\",\"detail__price\":\"burger-ingredients_detail__price__2BtQq\",\"detail__name\":\"burger-ingredients_detail__name__249gZ\",\"link\":\"burger-ingredients_link__2NkrS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__1qaiq\",\"container\":\"login_container__1C6a1\",\"form\":\"login_form__3MY-v\",\"title\":\"login_title__2XKWs\",\"box\":\"login_box__2W2WW\",\"link\":\"login_link__AG-IJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"reset-password_wrapper__3IzGp\",\"container\":\"reset-password_container__3U2w0\",\"form\":\"reset-password_form__28smG\",\"title\":\"reset-password_title__2uNUG\",\"box\":\"reset-password_box__1Jf57\",\"link\":\"reset-password_link__2rQ8t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"ingredient-details_body__160Rz\",\"title\":\"ingredient-details_title__3MFN8\",\"card\":\"ingredient-details_card__2XrAA\",\"text\":\"ingredient-details_text__rmrNp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"forgot-password_wrapper__33-8Z\",\"container\":\"forgot-password_container__1gaTL\",\"form\":\"forgot-password_form__3Fi1b\",\"title\":\"forgot-password_title__38BEl\",\"box\":\"forgot-password_box__2otoH\",\"link\":\"forgot-password_link__36q92\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product\":\"burger-ingredients-detail_product__Nd7ab\",\"image\":\"burger-ingredients-detail_image__3Jotn\",\"price\":\"burger-ingredients-detail_price__3Io4v\",\"name\":\"burger-ingredients-detail_name__2lLZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1u9PF\",\"header\":\"modal_header__AFG1h\",\"title\":\"modal_title__2a61H\",\"close\":\"modal_close__32rTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order-details_order__1fcxU\",\"title\":\"order-details_title__3PLac\",\"subtitle\":\"order-details_subtitle__1OnRt\",\"status\":\"order-details_status__3OwWW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"profile-options_form__1YpZp\",\"input\":\"profile-options_input__OSnTR\",\"form__buttons\":\"profile-options_form__buttons__3z_DZ\",\"text\":\"profile-options_text__3zY3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3BUAR\",\"main__container\":\"app_main__container__2McJw\",\"link\":\"app_link__2eDGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__gJBso\",\"header__logo\":\"app-header_header__logo__EFsP9\",\"nav\":\"app-header_nav__x44xw\",\"nav__menu\":\"app-header_nav__menu__Xx3Wr\",\"nav__item\":\"app-header_nav__item__zGeAw\",\"nav__link\":\"app-header_nav__link__2rxwt\",\"nav__linkActive\":\"app-header_nav__linkActive__1c4KT\",\"login\":\"app-header_login__3HuWR\",\"container\":\"app-header_container__37QIQ\"};"],"sourceRoot":""}